{"version":3,"sources":["components/easter-egg/brodyquest.mp3","components/easter-egg/easter-egg.png","actions/nodes.js","reducers/nodes.js","actions/tags.js","reducers/tags.js","actions/node-type.js","reducers/node-type.js","actions/index.js","reducers/visible.js","reducers/index.js","config.js","store/helpers.js","actions/check-font-loaded.js","utils/index.js","selectors/tags.js","selectors/disabled.js","selectors/edges.js","selectors/ranks.js","selectors/nodes.js","selectors/layout.js","selectors/layers.js","selectors/linked-nodes.js","components/icons/node-icon.js","components/flowchart/icon.js","components/flowchart/draw.js","components/tooltip/index.js","components/flowchart/index.js","components/tag-list/index.js","components/node-list/filter-nodes.js","components/node-list/node-list-search.js","components/icons/visible.js","components/icons/invisible.js","components/node-list/node-list-toggle.js","selectors/node-types.js","components/node-list/node-list-row.js","components/node-list/node-list-group.js","components/node-list/node-list-groups.js","components/node-list/index.js","components/icon-toolbar/icon-button.js","components/icons/label.js","components/icons/layers.js","components/icons/menu.js","components/icons/theme.js","components/icons/export.js","components/icon-toolbar/index.js","components/sidebar/index.js","components/export-modal/export-graph.js","components/export-modal/index.js","components/wrapper/index.js","store/normalize-data.js","utils/data/lorem-ipsum.mock.js","utils/data/animals.mock.js","utils/data/demo.mock.js","utils/data/layers.mock.js","store/initial-state.js","store/load-data.js","components/app/index.js","store/index.js","components/easter-egg/index.js","utils/random-data.js","utils/data-source.js","index.js"],"names":["module","exports","TOGGLE_NODE_CLICKED","toggleNodeClicked","nodeClicked","type","TOGGLE_NODES_DISABLED","toggleNodesDisabled","nodeIDs","isDisabled","TOGGLE_NODE_HOVERED","toggleNodeHovered","nodeHovered","nodeReducer","nodeState","action","updateState","newState","Object","assign","clicked","includes","disabled","reduce","id","hovered","TOGGLE_TAG_ACTIVE","TOGGLE_TAG_FILTER","tagReducer","tagState","active","tagID","enabled","TOGGLE_TYPE_DISABLED","nodeTypeReducer","nodeTypeState","typeID","RESET_DATA","resetData","data","TOGGLE_LAYERS","TOGGLE_EXPORT_MODAL","toggleExportModal","visible","TOGGLE_TEXT_LABELS","TOGGLE_SIDEBAR","TOGGLE_THEME","UPDATE_CHART_SIZE","UPDATE_FONT_LOADED","visibleReducer","visibleState","exportModal","layers","sidebar","createReducer","key","initialState","state","combinedReducer","combineReducers","node","nodeType","tag","edge","layer","chartSize","fontLoaded","textLabels","theme","rootReducer","resetDataReducer","dataPath","sidebarWidth","noWindow","window","loadState","serializedState","localStorage","getItem","JSON","parse","err","console","error","saveState","stringify","setItem","checkFontLoaded","Promise","resolve","fonts","document","fontName","Boolean","check","checkIfLoaded","setTimeout","ready","then","onloadingdone","requestAnimationFrame","step","performance","now","arrayToObject","array","callback","newObject","forEach","getNumberArray","n","Array","from","keys","randomNumber","Math","ceil","random","randomNumberBetween","min","max","getRandom","range","length","floor","LOREM_IPSUM","split","getRandomName","join","map","getRandomSelection","arr","result","len","taken","x","unique","d","i","indexOf","getTagIDs","ids","getTagEnabled","getTagData","createSelector","name","tagIDs","tagName","tagActive","tagEnabled","sort","getTagCount","total","filter","getNodeIDs","getNodeDisabledTag","tags","tagCount","nodeTags","nodeID","some","getNodeDisabled","nodeDisabledNode","nodeDisabledTag","typeDisabled","getVisibleNodeIDs","nodeDisabled","getVisibleLayerIDs","nodeLayer","layerIDs","visibleLayerIDs","layerID","getEdgeDisabled","sources","targets","edgeIDs","edgeSources","edgeTargets","edgeID","source","target","getEdgeIDs","getEdgeSources","getEdgeTargets","getTransitiveEdges","transitiveEdges","walkGraphEdges","path","concat","push","addNewEdge","getVisibleEdges","edgeDisabled","getLayerNodes","layerNodes","getNodeRank","edges","layersVisible","nodeDeps","sourceID","targetID","toposortedNodes","batchingToposort","nodeRanks","rank","getNodeName","getNodeType","getNodeActive","hoveredNode","activeViaTag","getNodeSelected","clickedNode","getNodeData","nodeName","a","b","disabled_node","disabled_tag","disabled_type","getGroupedNodes","nodes","obj","item","hasOwnProperty","getNodeTextWidth","svg","select","body","append","attr","nodeTextWidth","text","getBBox","width","remove","getNodeSize","showLabels","isTask","iconSize","padding","y","textWidth","innerWidth","height","textOffset","iconOffset","getVisibleNodes","fullName","nodeFullName","nodeSize","nodeRank","label","getGraph","hasVisibleLayers","ranker","graph","dagre","graphlib","Graph","setGraph","ranksep","marginx","marginy","setNode","setEdge","layout","getLayoutNodes","order","getLayoutEdges","getGraphSize","getChartSize","visibleSidebar","left","top","outerChartWidth","getSidebarWidth","outerWidth","outerHeight","getZoomPosition","chart","scale","translateX","translateY","getLayers","layerName","layerY","prevID","nextID","yMin","yMax","prev","next","topYGap","bottomYGap","yGap","calculateYPos","getCentralNode","getLinkedNodes","linkedNodes","traverseGraph","walk","direction","apply","reverse","paths","task","parameters","className","viewBox","svgNode","createElementNS","drawLayers","this","props","visibleLayers","el","layerGroup","selectAll","enterLayers","enter","exit","merge","drawLayerNames","layerNameGroup","transition","duration","DURATION","style","layerNames","enterLayerNames","drawNodes","centralNode","nodeActive","nodeSelected","nodeGroup","enterNodes","icon","classed","on","handleNodeClick","handleNodeMouseOver","handleNodeMouseOut","handleNodeKeyDown","end","catch","finally","drawEdges","edgeGroup","lineShape","line","curve","curveBasis","enterEdges","attrTween","current","points","previous","interpolatePath","draw","call","zeroWidthSpace","String","fromCharCode","Tooltip","targetRect","isRight","isTop","xOffset","yOffset","classnames","transform","replace","insertZeroWidthSpace","defaultProps","FlowChart","handleWindowResize","updateChartSize","handleBeforePrint","gs","graphSize","handleAfterPrint","onToggleNodeClicked","event","stopPropagation","handleChartClick","onToggleNodeHovered","showTooltip","hideTooltip","keyCode","tooltip","containerRef","React","createRef","svgRef","wrapperRef","edgesRef","nodesRef","layersRef","layerNamesRef","selectD3Elements","initZoomBehaviour","drawChart","zoomChart","addGlobalEventListeners","removeGlobalEventListeners","prevProps","zoom","wrapper","onUpdateChartSize","getBoundingClientRect","ResizeObserver","resizeObserver","observe","addEventListener","unobserve","removeEventListener","zoomBehaviour","k","translateExtent","ty","scaleExtent","zoomIdentity","translate","setState","ref","onClick","refX","refY","markerUnits","markerWidth","markerHeight","orient","Component","connect","dispatch","onToggleTagActive","toggleTagActive","onToggleTagFilter","toggleTagFilter","defaultText","Fragment","title","onMouseEnter","onMouseLeave","checked","onChange","e","escapeRegExp","utils","getHighlightedText","highlightMatch","searchValue","addHighlightedLabel","highlightedLabel","newNodes","filterNodes","filterNodesByType","valueRegex","RegExp","match","nodeMatchesSearch","getFilteredNodes","filteredNodes","onUpdateSearchValue","onKeyDown","handleKeyEvent","escape","bind","value","onToggleNodesDisabled","getNodeTypeIDs","getTypeNodeCount","types","typeNodeIDs","visibleTypeNodeIDs","getNodeTypes","typeName","typeNodeCount","nodeCount","NodeListRow","children","selected","VisibilityIcon","VisibleIcon","InvisibleIcon","faded","onFocus","onBlur","dangerouslySetInnerHTML","__html","htmlFor","aria-label","onToggleTypeDisabled","toggleTypeDisabled","collapsed","onToggleCollapsed","flipId","inverseFlipId","toLowerCase","onAppear","classList","add","onanimationend","opacity","onExit","removeElement","storedState","handleKeyDown","useEffect","useState","groupsCollapsed","setCollapsed","flipKey","updateSearchValue","autoHide","hideTracksWhenNotNeeded","icons","xmlns","menu","export","IconButton","ariaLabel","ariaLive","labelText","Icon","aria-live","disableLayerBtn","onToggleExportModal","onToggleLayers","onToggleSidebar","toggleSidebar","onToggleTextLabels","onToggleTheme","themeBtn","labelBtn","exportBtn","layerBtn","require","downloadSvg","default","downloadPng","exportGraph","format","download","mockFn","png","querySelector","clone","parentNode","appendChild","cloneNode","setAttribute","removeAttribute","createElement","innerHTML","prepend","css","removeChild","onToggle","onClose","formatData","getInitialPipelineState","isArray","validateInput","schema_id","full_name","isParam","addNode","getEdgeID","addEdge","addTag","addLayer","getPipelineData","loremIpsum","animals","demo","Error","undefined","getInitialState","pipelineData","normalizeData","localStorageState","nodeTypeDisabled","loadJsonData","fullPath","substr","json","App","store","createStore","reducer","subscribe","getState","configureStore","asyncLoadJsonData","checkWebFontLoading","updatePipelineData","loadData","normalizedData","EasterEgg","play","jest","info","audio","Audio","mp3","loop","KonamiCode","listen","toggleState","toggleAudio","toggleCSS","pause","src","img","alt","LAYERS","Pipeline","rankCount","getRankCount","rankLayers","getRankLayers","generateTags","generateNodes","generateEdges","layerSize","rankNodeCount","getRankNodeCount","getType","createNode","p","getRandomTags","dataNodes","taskNodes","remainingEdgeCount","ancestors","getRandomNodes","descendants","connections","findIndex","findMatchingEdge","filterUnconnectedNodes","filterUnusedTags","generateRandomPipeline","getSchema","hasWindow","getDataSource","qs","location","search","REACT_APP_DATA_SOURCE","process","isDemo","host","encodeURIComponent","expectedInput","getRandomPipeline","validateDataSource","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f626a013.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brodyquest.6259cc84.mp3\";","module.exports = __webpack_public_path__ + \"static/media/easter-egg.e702bd5f.png\";","export const TOGGLE_NODE_CLICKED = 'TOGGLE_NODE_CLICKED';\n\n/**\n * Update the value of the currently-active clicked node\n * @param {string|null} nodeClicked The node's unique identifier\n */\nexport function toggleNodeClicked(nodeClicked) {\n  return {\n    type: TOGGLE_NODE_CLICKED,\n    nodeClicked\n  };\n}\n\nexport const TOGGLE_NODES_DISABLED = 'TOGGLE_NODES_DISABLED';\n\n/**\n * Toggle a selected group of nodes' visibility on/off\n * @param {Array} nodeIDs The nodes' unique identifiers\n * @param {Boolean} isDisabled Whether the node should be visible\n */\nexport function toggleNodesDisabled(nodeIDs, isDisabled) {\n  return {\n    type: TOGGLE_NODES_DISABLED,\n    nodeIDs,\n    isDisabled\n  };\n}\n\nexport const TOGGLE_NODE_HOVERED = 'TOGGLE_NODE_HOVERED';\n\n/**\n * Update the value of the currently-active hovered node\n * @param {string|null} nodeHovered The node's unique identifier\n */\nexport function toggleNodeHovered(nodeHovered) {\n  return {\n    type: TOGGLE_NODE_HOVERED,\n    nodeHovered\n  };\n}\n","import {\n  TOGGLE_NODE_CLICKED,\n  TOGGLE_NODES_DISABLED,\n  TOGGLE_NODE_HOVERED\n} from '../actions/nodes';\n\nfunction nodeReducer(nodeState = {}, action) {\n  const updateState = newState => Object.assign({}, nodeState, newState);\n\n  switch (action.type) {\n    case TOGGLE_NODE_CLICKED: {\n      return updateState({\n        clicked: action.nodeClicked\n      });\n    }\n\n    case TOGGLE_NODES_DISABLED: {\n      return updateState({\n        clicked: action.nodeIDs.includes(nodeState.clicked)\n          ? null\n          : nodeState.clicked,\n        disabled: action.nodeIDs.reduce(\n          (disabled, id) =>\n            Object.assign({}, disabled, {\n              [id]: action.isDisabled\n            }),\n          nodeState.disabled\n        )\n      });\n    }\n\n    case TOGGLE_NODE_HOVERED: {\n      return updateState({\n        hovered: action.nodeHovered\n      });\n    }\n\n    default:\n      return nodeState;\n  }\n}\n\nexport default nodeReducer;\n","export const TOGGLE_TAG_ACTIVE = 'TOGGLE_TAG_ACTIVE';\n\n/**\n * Toggle a tag's highlighting on/off\n * @param {string} tagID Tag id\n * @param {Boolean} active True if tag is active\n */\nexport function toggleTagActive(tagID, active) {\n  return {\n    type: TOGGLE_TAG_ACTIVE,\n    tagID,\n    active\n  };\n}\n\nexport const TOGGLE_TAG_FILTER = 'TOGGLE_TAG_FILTER';\n\n/**\n * Toggle a tag on/off\n * @param {string} tagID Tag id\n * @param {Boolean} enabled True if tag is enabled\n */\nexport function toggleTagFilter(tagID, enabled) {\n  return {\n    type: TOGGLE_TAG_FILTER,\n    tagID,\n    enabled\n  };\n}\n","import { TOGGLE_TAG_ACTIVE, TOGGLE_TAG_FILTER } from '../actions/tags';\n\nfunction tagReducer(tagState = {}, action) {\n  const updateState = newState => Object.assign({}, tagState, newState);\n\n  switch (action.type) {\n    case TOGGLE_TAG_ACTIVE: {\n      return updateState({\n        active: Object.assign({}, tagState.active, {\n          [action.tagID]: action.active\n        })\n      });\n    }\n\n    case TOGGLE_TAG_FILTER: {\n      return updateState({\n        enabled: Object.assign({}, tagState.enabled, {\n          [action.tagID]: action.enabled\n        })\n      });\n    }\n\n    default:\n      return tagState;\n  }\n}\n\nexport default tagReducer;\n","export const TOGGLE_TYPE_DISABLED = 'TOGGLE_TYPE_DISABLED';\n\n/**\n * Toggle a node-type's visibility on/off\n * @param {string} typeID Type id\n * @param {Boolean} disabled True if type is disabled\n */\nexport function toggleTypeDisabled(typeID, disabled) {\n  return {\n    type: TOGGLE_TYPE_DISABLED,\n    typeID,\n    disabled\n  };\n}\n","import { TOGGLE_TYPE_DISABLED } from '../actions/node-type';\n\nfunction nodeTypeReducer(nodeTypeState = {}, action) {\n  switch (action.type) {\n    case TOGGLE_TYPE_DISABLED: {\n      return Object.assign({}, nodeTypeState, {\n        disabled: Object.assign({}, nodeTypeState.disabled, {\n          [action.typeID]: action.disabled\n        })\n      });\n    }\n    default:\n      return nodeTypeState;\n  }\n}\n\nexport default nodeTypeReducer;\n","export const RESET_DATA = 'RESET_DATA';\n\n/**\n * Overwrite the existing data store when receiving new data from upstream\n * @param {Object} data New pipeline state data\n */\nexport function resetData(data) {\n  return {\n    type: RESET_DATA,\n    data\n  };\n}\n\nexport const TOGGLE_LAYERS = 'TOGGLE_LAYERS';\n\n/**\n * Toggle whether to show layers on/off\n * @param {Boolean} visible True if layers are to be shown\n */\nexport function toggleLayers(visible) {\n  return {\n    type: TOGGLE_LAYERS,\n    visible\n  };\n}\n\nexport const TOGGLE_EXPORT_MODAL = 'TOGGLE_EXPORT_MODAL';\n\n/**\n * Toggle whether to show the export modal\n * @param {Boolean} visible True if the modal is to be shown\n */\nexport function toggleExportModal(visible) {\n  return {\n    type: TOGGLE_EXPORT_MODAL,\n    visible\n  };\n}\n\nexport const TOGGLE_TEXT_LABELS = 'TOGGLE_TEXT_LABELS';\n\n/**\n * Toggle whether to show text labels on/off\n * @param {Boolean} textLabels True if text labels are to be shown\n */\nexport function toggleTextLabels(textLabels) {\n  return {\n    type: TOGGLE_TEXT_LABELS,\n    textLabels\n  };\n}\n\nexport const TOGGLE_TAG_FILTER = 'TOGGLE_TAG_FILTER';\n\n/**\n * Toggle a tag on/off\n * @param {string} tagID Tag id\n * @param {Boolean} enabled True if tag is enabled\n */\nexport function toggleTagFilter(tagID, enabled) {\n  return {\n    type: TOGGLE_TAG_FILTER,\n    tagID,\n    enabled\n  };\n}\n\nexport const TOGGLE_SIDEBAR = 'TOGGLE_SIDEBAR';\n\n/**\n * Toggle sidebar visible/hidden\n * @param {boolean} visible Whether sidebar nav is shown\n */\nexport function toggleSidebar(visible) {\n  return {\n    type: TOGGLE_SIDEBAR,\n    visible\n  };\n}\n\nexport const TOGGLE_THEME = 'TOGGLE_THEME';\n\n/**\n * Switch between light/dark theme\n * @param {string} theme Theme name\n */\nexport function toggleTheme(theme) {\n  return {\n    type: TOGGLE_THEME,\n    theme\n  };\n}\n\nexport const UPDATE_CHART_SIZE = 'UPDATE_CHART_SIZE';\n\n/**\n * Store the chart size, based on the window\n * @param {Object} chartSize getBoundingClientRect value\n */\nexport function updateChartSize(chartSize) {\n  return {\n    type: UPDATE_CHART_SIZE,\n    chartSize\n  };\n}\n\nexport const UPDATE_FONT_LOADED = 'UPDATE_FONT_LOADED';\n\n/**\n * Update whether the webfont has loaded, which should block the chart render\n * @param {Boolean} fontLoaded Whether the font has loaded\n */\nexport function updateFontLoaded(fontLoaded) {\n  return {\n    type: UPDATE_FONT_LOADED,\n    fontLoaded\n  };\n}\n","import { TOGGLE_EXPORT_MODAL, TOGGLE_LAYERS, TOGGLE_SIDEBAR } from '../actions';\n\nfunction visibleReducer(visibleState = {}, action) {\n  switch (action.type) {\n    case TOGGLE_EXPORT_MODAL: {\n      return Object.assign({}, visibleState, {\n        exportModal: action.visible\n      });\n    }\n\n    case TOGGLE_LAYERS: {\n      return Object.assign({}, visibleState, {\n        layers: action.visible\n      });\n    }\n\n    case TOGGLE_SIDEBAR: {\n      return Object.assign({}, visibleState, {\n        sidebar: action.visible\n      });\n    }\n\n    default:\n      return visibleState;\n  }\n}\n\nexport default visibleReducer;\n","import { combineReducers } from 'redux';\nimport node from './nodes';\nimport tag from './tags';\nimport nodeType from './node-type';\nimport visible from './visible';\nimport {\n  RESET_DATA,\n  TOGGLE_TEXT_LABELS,\n  TOGGLE_THEME,\n  UPDATE_CHART_SIZE,\n  UPDATE_FONT_LOADED\n} from '../actions';\n\n/**\n * Create a generic reducer\n * @param {string} type Action type\n * @param {string} key Action payload key\n * @param {*} initialState Default state\n * @return {*} Updated state\n */\nconst createReducer = (type, key, initialState) => (\n  state = initialState,\n  action\n) => {\n  if (action.type === type) {\n    return action[key];\n  }\n  return state;\n};\n\n/**\n * Reset/update application-wide data\n * @param {Object} state Complete app state\n * @param {Object} action Redux action\n * @return {Object} Updated(?) state\n */\nfunction resetDataReducer(state = {}, action) {\n  if (action.type === RESET_DATA) {\n    return Object.assign({}, state, action.data);\n  }\n  return state;\n}\n\nconst combinedReducer = combineReducers({\n  node,\n  nodeType,\n  tag,\n  visible,\n  edge: (state = {}) => state,\n  id: (state = null) => state,\n  layer: (state = {}) => state,\n  chartSize: createReducer(UPDATE_CHART_SIZE, 'chartSize', {}),\n  fontLoaded: createReducer(UPDATE_FONT_LOADED, 'fontLoaded', false),\n  textLabels: createReducer(TOGGLE_TEXT_LABELS, 'textLabels', true),\n  theme: createReducer(TOGGLE_THEME, 'theme', 'dark')\n});\n\nconst rootReducer = (state, action) =>\n  resetDataReducer(combinedReducer(state, action), action);\n\nexport default rootReducer;\n","export const dataPath = './api/nodes.json';\n\nexport const localStorageName = 'KedroViz';\n\n// Also set in src/styles/_variables.scss:\nexport const sidebarBreakpoint = 700;\nexport const sidebarWidth = {\n  open: 400,\n  closed: 60\n};\n","import { localStorageName } from '../config';\n\nconst noWindow = typeof window === 'undefined';\n\n/**\n * Retrieve state data from localStorage\n * @return {Object} State\n */\nexport const loadState = () => {\n  if (noWindow) {\n    return {};\n  }\n  try {\n    const serializedState = window.localStorage.getItem(localStorageName);\n    if (serializedState === null) {\n      return {};\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    console.error(err);\n    return {};\n  }\n};\n\n/**\n * Save updated state to localStorage\n * @param {Object} state New state object\n */\nexport const saveState = state => {\n  if (noWindow) {\n    return;\n  }\n  try {\n    const newState = Object.assign(loadState(), state);\n    const serializedState = JSON.stringify(newState);\n    window.localStorage.setItem(localStorageName, serializedState);\n  } catch (err) {\n    console.error(err);\n  }\n};\n","/**\n * Prevent chart from displaying until the webfont has loaded,\n * to ensure that text label SVGRect BBox measurements are accurate\n * @return {Promise} Resolves when font is detected as having loaded, or after 8 seconds\n */\nconst checkFontLoaded = () =>\n  new Promise(resolve => {\n    const { fonts } = document;\n    const fontName = '10px Titillium Web';\n\n    // If FontFaceSet is not supported then default to true immediately\n    if (!Boolean(fonts && fonts.check)) {\n      resolve();\n      return;\n    }\n\n    /**\n     * Check whether the webfont is ready, and show the chart if so\n     */\n    const checkIfLoaded = () => {\n      if (fonts.check(fontName)) {\n        // Add 0.1s delay because fonts.check often returns true too early\n        setTimeout(resolve, 100);\n      }\n    };\n\n    /**\n     * Recursive requestAnimationFrame step function, which acts as a backup\n     * to the native FontFaceSet event handlers.\n     */\n    const step = () => {\n      // If it's been 8 seconds since page load then just set loaded=true\n      if (performance.now() > 8000) {\n        resolve();\n      } else if (fonts.check(fontName)) {\n        // Add 0.1s delay because fonts.check often returns true too early\n        setTimeout(resolve, 100);\n      } else {\n        requestAnimationFrame(step);\n      }\n    };\n\n    if (fonts.check(fontName)) {\n      // If the font is already loaded then dispatch immediately\n      resolve();\n    } else {\n      // Add event listenerss to detect when font has loaded, and display the chart.\n      // This uses both FontFaceSet.ready and FontFaceSet.onloadingdone, as the former\n      // often returns too early, and the latter often doesn't return at all.\n      if (fonts.ready) {\n        fonts.ready.then(checkIfLoaded);\n      }\n      fonts.onloadingdone = checkIfLoaded;\n      // Use requestAnimationFrame as a fallback for older browsers\n      requestAnimationFrame(step);\n    }\n  });\n\nexport default checkFontLoaded;\n","//--- Useful JS utility functions ---//\n\n/**\n * Loop through an array and output to an object\n * @param {Array} array\n * @param {Function} callback\n */\nexport const arrayToObject = (array, callback) => {\n  const newObject = {};\n  array.forEach(key => {\n    newObject[key] = callback(key);\n  });\n  return newObject;\n};\n\n/**\n * Format a UNIX timestamp into a human-readable string\n * @param {number|string} datetime A UNIX timestamp\n * @returns {string} The date and time but prettier\n */\nexport const formatTime = datetime => {\n  const d = new Date(+datetime);\n  return `${d.toDateString()} ${d.toLocaleTimeString()}`;\n};\n\n/**\n * Get an array of numbers\n * @param {number} n Length of the array\n */\nexport const getNumberArray = n => Array.from(Array(n).keys());\n\n/**\n * Get a random number between 0 to n-1, inclusive\n * @param {number} n Max number\n */\nexport const randomIndex = n => Math.floor(Math.random() * n);\n\n/**\n * Get a random number between 1 to n, inclusive\n * @param {number} n Max number\n */\nexport const randomNumber = n => Math.ceil(Math.random() * n);\n\n/**\n * Get a random number between min and max, inclusive\n * @param {number} (min) Min number\n * @param {number} (max) Max number\n */\nexport const randomNumberBetween = (min, max) => randomNumber(max - min) + min;\n\n/**\n * Get a random datum from an array\n * @param {Array} range The array to select a random item from\n */\nexport const getRandom = range => range[randomIndex(range.length)];\n\nexport const LOREM_IPSUM = 'lorem ipsum dolor sit amet consectetur adipiscing elit vestibulum id turpis nunc nulla vitae diam dignissim fermentum elit sit amet viverra libero quisque condimentum pellentesque convallis sed consequat neque ac rhoncus finibus'.split(\n  ' '\n);\n\n/**\n * Generate a random latin name\n * @param {number} n Number of words in the name\n * @param {string} join The character(s) used to join each word\n */\nexport const getRandomName = (n, join = '_') =>\n  getNumberArray(n)\n    .map(() => getRandom(LOREM_IPSUM))\n    .join(join);\n\n/**\n * Randomly select a certain number (n) of items from an array (arr).\n * via https://stackoverflow.com/a/19270021/1651713\n * @param {array} arr List from which to choose\n * @param {number} n Number of items to select\n */\nexport const getRandomSelection = (arr, n) => {\n  const result = new Array(n);\n  let len = arr.length;\n  const taken = new Array(len);\n  if (n > len) {\n    return arr;\n  }\n  while (n--) {\n    var x = Math.floor(Math.random() * len);\n    result[n] = arr[x in taken ? taken[x] : x];\n    taken[x] = --len in taken ? taken[len] : len;\n  }\n  return result;\n};\n\n/**\n * Filter duplicate values from an array\n * @param {any} d Datum\n * @param {number} i Index\n * @param {Array} arr The array to remove duplicate values from\n */\nexport const unique = (d, i, arr) => arr.indexOf(d) === i;\n","import { createSelector } from 'reselect';\n\nconst getTagIDs = state => state.tag.ids;\nconst getTagName = state => state.tag.name;\nconst getTagActive = state => state.tag.active;\nconst getTagEnabled = state => state.tag.enabled;\n\n/**\n * Retrieve the formatted list of tag filters\n */\nexport const getTagData = createSelector(\n  [getTagIDs, getTagName, getTagActive, getTagEnabled],\n  (tagIDs, tagName, tagActive, tagEnabled) =>\n    tagIDs.sort().map(id => ({\n      id,\n      name: tagName[id],\n      active: Boolean(tagActive[id]),\n      enabled: Boolean(tagEnabled[id])\n    }))\n);\n\n/**\n * Get the total and enabled number of tags\n */\nexport const getTagCount = createSelector(\n  [getTagIDs, getTagEnabled],\n  (tagIDs, tagEnabled) => ({\n    total: tagIDs.length,\n    enabled: tagIDs.filter(id => tagEnabled[id]).length\n  })\n);\n","import { createSelector } from 'reselect';\nimport { arrayToObject } from '../utils';\nimport { getTagCount } from './tags';\n\nconst getNodeIDs = state => state.node.ids;\nconst getNodeDisabledNode = state => state.node.disabled;\nconst getNodeTags = state => state.node.tags;\nconst getNodeType = state => state.node.type;\nconst getTagEnabled = state => state.tag.enabled;\nconst getNodeTypeDisabled = state => state.nodeType.disabled;\nconst getEdgeIDs = state => state.edge.ids;\nconst getEdgeSources = state => state.edge.sources;\nconst getEdgeTargets = state => state.edge.targets;\nconst getLayerIDs = state => state.layer.ids;\nconst getNodeLayer = state => state.node.layer;\n\n/**\n * Calculate whether nodes should be disabled based on their tags\n */\nexport const getNodeDisabledTag = createSelector(\n  [getNodeIDs, getTagEnabled, getTagCount, getNodeTags],\n  (nodeIDs, tagEnabled, tagCount, nodeTags) =>\n    arrayToObject(nodeIDs, nodeID => {\n      if (tagCount.enabled === 0) {\n        return false;\n      }\n      if (nodeTags[nodeID].length) {\n        // Hide task nodes that don't have at least one tag filter enabled\n        return !nodeTags[nodeID].some(tag => tagEnabled[tag]);\n      }\n      return true;\n    })\n);\n\n/**\n * Set disabled status if the node is specifically hidden, and/or via a tag/view/type\n */\nexport const getNodeDisabled = createSelector(\n  [\n    getNodeIDs,\n    getNodeDisabledNode,\n    getNodeDisabledTag,\n    getNodeType,\n    getNodeTypeDisabled\n  ],\n  (nodeIDs, nodeDisabledNode, nodeDisabledTag, nodeType, typeDisabled) =>\n    arrayToObject(nodeIDs, id =>\n      Boolean(\n        nodeDisabledNode[id] ||\n          nodeDisabledTag[id] ||\n          typeDisabled[nodeType[id]]\n      )\n    )\n);\n\n/**\n * Get a list of just the IDs for the remaining visible nodes\n */\nexport const getVisibleNodeIDs = createSelector(\n  [getNodeIDs, getNodeDisabled],\n  (nodeIDs, nodeDisabled) => nodeIDs.filter(id => !nodeDisabled[id])\n);\n\n/**\n * Get a list of just the IDs for the remaining visible layers\n */\nexport const getVisibleLayerIDs = createSelector(\n  [getVisibleNodeIDs, getNodeLayer, getLayerIDs],\n  (nodeIDs, nodeLayer, layerIDs) => {\n    const visibleLayerIDs = {};\n    for (const nodeID of nodeIDs) {\n      visibleLayerIDs[nodeLayer[nodeID]] = true;\n    }\n    return layerIDs.filter(layerID => visibleLayerIDs[layerID]);\n  }\n);\n\n/**\n * Determine whether an edge should be disabled based on their source/target nodes\n */\nexport const getEdgeDisabled = createSelector(\n  [getEdgeIDs, getNodeDisabled, getEdgeSources, getEdgeTargets],\n  (edgeIDs, nodeDisabled, edgeSources, edgeTargets) =>\n    arrayToObject(edgeIDs, edgeID => {\n      const source = edgeSources[edgeID];\n      const target = edgeTargets[edgeID];\n      return Boolean(nodeDisabled[source] || nodeDisabled[target]);\n    })\n);\n","import { createSelector } from 'reselect';\nimport { getNodeDisabled, getEdgeDisabled } from './disabled';\n\nconst getNodeIDs = state => state.node.ids;\nconst getEdgeIDs = state => state.edge.ids;\nconst getEdgeSources = state => state.edge.sources;\nconst getEdgeTargets = state => state.edge.targets;\n\n/**\n * Create a new transitive edge from the first and last edge in the path\n * @param {string} target Node ID for the new edge\n * @param {string} source Node ID for the new edge\n * @param {object} transitiveEdges Store of existing edges\n */\nexport const addNewEdge = (source, target, { edgeIDs, sources, targets }) => {\n  const id = [source, target].join('|');\n  if (!edgeIDs.includes(id)) {\n    edgeIDs.push(id);\n    sources[id] = source;\n    targets[id] = target;\n  }\n};\n\n/**\n * Create new edges to connect nodes which have a disabled node (or nodes)\n * in between them\n */\nexport const getTransitiveEdges = createSelector(\n  [getNodeIDs, getEdgeIDs, getNodeDisabled, getEdgeSources, getEdgeTargets],\n  (nodeIDs, edgeIDs, nodeDisabled, edgeSources, edgeTargets) => {\n    const transitiveEdges = {\n      edgeIDs: [],\n      sources: {},\n      targets: {}\n    };\n\n    /**\n     * Recursively walk through the graph, stepping over disabled nodes,\n     * generating a list of nodes visited so far, and create transitive edges\n     * for each path that visits disabled nodes between enabled nodes.\n     * @param {Array} path The route that has been explored so far\n     */\n    const walkGraphEdges = path => {\n      edgeIDs.forEach(edgeID => {\n        const source = path[path.length - 1];\n        // Filter to only edges where the source node is the previous target\n        if (edgeSources[edgeID] !== source) {\n          return;\n        }\n        const target = edgeTargets[edgeID];\n        if (nodeDisabled[target]) {\n          // If target node is disabled then keep walking the graph\n          walkGraphEdges(path.concat(target));\n        } else if (path.length > 1) {\n          // Else only create a new edge if there would be 3 or more nodes in the path\n          addNewEdge(path[0], target, transitiveEdges);\n        }\n      });\n    };\n\n    // Only run walk if some nodes are disabled\n    if (nodeIDs.some(nodeID => nodeDisabled[nodeID])) {\n      // Examine the children of every enabled node. The walk only needs\n      // to be run in a single direction (i.e. top down), because links\n      // that end in a terminus can never be transitive.\n      nodeIDs.forEach(nodeID => {\n        if (!nodeDisabled[nodeID]) {\n          walkGraphEdges([nodeID]);\n        }\n      });\n    }\n\n    return transitiveEdges;\n  }\n);\n\n/**\n * Get only the visible edges (plus transitive edges),\n * and return them formatted as an array of objects\n */\nexport const getVisibleEdges = createSelector(\n  [\n    getEdgeIDs,\n    getEdgeDisabled,\n    getEdgeSources,\n    getEdgeTargets,\n    getTransitiveEdges\n  ],\n  (edgeIDs, edgeDisabled, edgeSources, edgeTargets, transitiveEdges) =>\n    edgeIDs\n      .filter(id => !edgeDisabled[id])\n      .concat(transitiveEdges.edgeIDs)\n      .map(id => ({\n        id,\n        source: edgeSources[id] || transitiveEdges.sources[id],\n        target: edgeTargets[id] || transitiveEdges.targets[id]\n      }))\n);\n","import { createSelector } from 'reselect';\nimport batchingToposort from 'batching-toposort';\nimport { getVisibleNodeIDs, getVisibleLayerIDs } from './disabled';\nimport { getVisibleEdges } from './edges';\n\nconst getNodeLayer = state => state.node.layer;\nconst getLayersVisible = state => state.visible.layers;\n\n/**\n * Get list of visible nodes for each visible layer\n */\nexport const getLayerNodes = createSelector(\n  [getVisibleNodeIDs, getVisibleLayerIDs, getNodeLayer],\n  (nodeIDs, layerIDs, nodeLayer) => {\n    // Create object containing a list of every node for each layer\n    const layerNodes = {};\n    for (const nodeID of nodeIDs) {\n      const layer = nodeLayer[nodeID];\n      if (!layerNodes[layer]) {\n        layerNodes[layer] = [];\n      }\n      layerNodes[layer].push(nodeID);\n    }\n\n    // Convert to a nested array of layers of nodes\n    return layerIDs.map(layerID => layerNodes[layerID]);\n  }\n);\n\n/**\n * Calculate ranks (vertical placement) for each node,\n * by toposorting while taking layers into account\n */\nexport const getNodeRank = createSelector(\n  [getVisibleNodeIDs, getVisibleEdges, getLayerNodes, getLayersVisible],\n  (nodeIDs, edges, layerNodes, layersVisible) => {\n    if (!layersVisible) {\n      return {};\n    }\n\n    // For each node, create a list of nodes that depend on that node\n    const nodeDeps = {};\n\n    // Initialise empty dependency arrays for each node\n    for (const nodeID of nodeIDs) {\n      nodeDeps[nodeID] = [];\n    }\n\n    // Add dependencies for visible edges\n    for (const edge of edges) {\n      nodeDeps[edge.source].push(edge.target);\n    }\n\n    // Add \"false edge\" dependencies for layered nodes to prevent layer overlaps\n    for (let i = 1; i < layerNodes.length; i++) {\n      for (const sourceID of layerNodes[i - 1]) {\n        for (const targetID of layerNodes[i]) {\n          nodeDeps[sourceID].push(targetID);\n        }\n      }\n    }\n\n    // Run toposort algorithm to rank nodes by dependency\n    const toposortedNodes = batchingToposort(nodeDeps);\n\n    // Convert toposort order into rank numbering\n    const nodeRanks = {};\n    for (let rank = 0; rank < toposortedNodes.length; rank++) {\n      for (const nodeID of toposortedNodes[rank]) {\n        nodeRanks[nodeID] = rank;\n      }\n    }\n\n    return nodeRanks;\n  }\n);\n","import { createSelector } from 'reselect';\nimport { select } from 'd3-selection';\nimport { arrayToObject } from '../utils';\nimport {\n  getNodeDisabled,\n  getNodeDisabledTag,\n  getVisibleNodeIDs\n} from './disabled';\nimport { getNodeRank } from './ranks';\n\nconst getNodeIDs = state => state.node.ids;\nconst getNodeName = state => state.node.name;\nconst getNodeFullName = state => state.node.fullName;\nconst getNodeDisabledNode = state => state.node.disabled;\nconst getNodeTags = state => state.node.tags;\nconst getNodeType = state => state.node.type;\nconst getNodeLayer = state => state.node.layer;\nconst getHoveredNode = state => state.node.hovered;\nconst getClickedNode = state => state.node.clicked;\nconst getTagActive = state => state.tag.active;\nconst getTextLabels = state => state.textLabels;\nconst getFontLoaded = state => state.fontLoaded;\nconst getNodeTypeDisabled = state => state.nodeType.disabled;\n\n/**\n * Set active status if the node is specifically highlighted, and/or via an associated tag\n */\nexport const getNodeActive = createSelector(\n  [getNodeIDs, getHoveredNode, getNodeTags, getTagActive],\n  (nodeIDs, hoveredNode, nodeTags, tagActive) =>\n    arrayToObject(nodeIDs, nodeID => {\n      if (nodeID === hoveredNode) {\n        return true;\n      }\n      const activeViaTag = nodeTags[nodeID].some(tag => tagActive[tag]);\n      return Boolean(activeViaTag);\n    })\n);\n\n/**\n * Set selected status if the node is clicked\n */\nexport const getNodeSelected = createSelector(\n  [getNodeIDs, getClickedNode, getNodeDisabled],\n  (nodeIDs, clickedNode, nodeDisabled) =>\n    arrayToObject(\n      nodeIDs,\n      nodeID => nodeID === clickedNode && !nodeDisabled[nodeID]\n    )\n);\n\n/**\n * Returns formatted nodes as an array, with all relevant properties\n */\nexport const getNodeData = createSelector(\n  [\n    getNodeIDs,\n    getNodeName,\n    getNodeType,\n    getNodeDisabled,\n    getNodeDisabledNode,\n    getNodeDisabledTag,\n    getNodeTypeDisabled\n  ],\n  (\n    nodeIDs,\n    nodeName,\n    nodeType,\n    nodeDisabled,\n    nodeDisabledNode,\n    nodeDisabledTag,\n    typeDisabled\n  ) =>\n    nodeIDs\n      .sort((a, b) => {\n        if (nodeName[a] < nodeName[b]) return -1;\n        if (nodeName[a] > nodeName[b]) return 1;\n        return 0;\n      })\n      .map(id => ({\n        id,\n        name: nodeName[id],\n        type: nodeType[id],\n        disabled: nodeDisabled[id],\n        disabled_node: Boolean(nodeDisabledNode[id]),\n        disabled_tag: nodeDisabledTag[id],\n        disabled_type: Boolean(typeDisabled[nodeType[id]])\n      }))\n);\n\n/**\n * Returns formatted nodes grouped by type\n */\nexport const getGroupedNodes = createSelector(\n  [getNodeData],\n  nodes =>\n    nodes.reduce(function(obj, item) {\n      const key = item.type;\n      if (!obj.hasOwnProperty(key)) {\n        obj[key] = [];\n      }\n      obj[key].push(item);\n      return obj;\n    }, {})\n);\n\n/**\n * Temporarily create a new SVG container in the DOM, write a node to it,\n * measure its width with getBBox, then delete the container and store the value\n */\nexport const getNodeTextWidth = createSelector(\n  [getNodeIDs, getNodeName, getFontLoaded],\n  (nodeIDs, nodeName) => {\n    const svg = select(document.body)\n      .append('svg')\n      .attr('class', 'kedro pipeline-node');\n    const nodeTextWidth = arrayToObject(nodeIDs, nodeID => {\n      const text = svg.append('text').text(nodeName[nodeID]);\n      const node = text.node();\n      const width = node.getBBox ? node.getBBox().width : 0;\n      return width;\n    });\n    svg.remove();\n    return nodeTextWidth;\n  }\n);\n\n/**\n * Get the top/bottom and left/right padding for a node\n * @param {Boolean} showLabels Whether labels are visible\n * @param {Boolean} isTask Whether the node is a task type (vs data/params)\n */\nexport const getPadding = (showLabels, isTask) => {\n  if (showLabels) {\n    if (isTask) {\n      return { x: 16, y: 10 };\n    }\n    return { x: 20, y: 10 };\n  }\n  if (isTask) {\n    return { x: 14, y: 14 };\n  }\n  return { x: 16, y: 16 };\n};\n\n/**\n * Calculate node width/height and icon/text positioning\n */\nexport const getNodeSize = createSelector(\n  [getNodeIDs, getNodeTextWidth, getTextLabels, getNodeType],\n  (nodeIDs, nodeTextWidth, textLabels, nodeType) =>\n    arrayToObject(nodeIDs, nodeID => {\n      const iconSize = textLabels ? 24 : 28;\n      const padding = getPadding(textLabels, nodeType[nodeID] === 'task');\n      const textWidth = textLabels ? nodeTextWidth[nodeID] : 0;\n      const textGap = textLabels ? 6 : 0;\n      const innerWidth = iconSize + textWidth + textGap;\n      return {\n        width: innerWidth + padding.x * 2,\n        height: iconSize + padding.y * 2,\n        textOffset: (innerWidth - textWidth) / 2,\n        iconOffset: -innerWidth / 2,\n        iconSize\n      };\n    })\n);\n\n/**\n * Returns only visible nodes as an array, but without any extra properties\n * that are unnecessary for the chart layout calculation\n */\nexport const getVisibleNodes = createSelector(\n  [\n    getVisibleNodeIDs,\n    getNodeName,\n    getNodeType,\n    getNodeFullName,\n    getNodeSize,\n    getNodeLayer,\n    getNodeRank\n  ],\n  (nodeIDs, nodeName, nodeType, nodeFullName, nodeSize, nodeLayer, nodeRank) =>\n    nodeIDs.map(id => ({\n      id,\n      name: nodeName[id],\n      label: nodeName[id],\n      fullName: nodeFullName[id],\n      type: nodeType[id],\n      layer: nodeLayer[id],\n      rank: nodeRank[id],\n      ...nodeSize[id]\n    }))\n);\n","import { createSelector } from 'reselect';\nimport dagre from 'dagre';\nimport { getVisibleNodes } from './nodes';\nimport { getVisibleEdges } from './edges';\nimport { sidebarBreakpoint, sidebarWidth } from '../config';\n\nconst getHasVisibleLayers = state =>\n  state.visible.layers && Boolean(state.layer.ids.length);\nconst getNodeType = state => state.node.type;\nconst getNodeLayer = state => state.node.layer;\nconst getVisibleSidebar = state => state.visible.sidebar;\n\n/**\n * Calculate chart layout with Dagre.js.\n * This is an extremely expensive operation so we want it to run as infrequently\n * as possible, and keep it separate from other properties (like node.active)\n * which don't affect layout.\n */\nexport const getGraph = createSelector(\n  [getVisibleNodes, getVisibleEdges, getHasVisibleLayers],\n  (nodes, edges, hasVisibleLayers) => {\n    if (!nodes.length || !edges.length) {\n      return;\n    }\n\n    const ranker = hasVisibleLayers ? 'none' : null;\n    const graph = new dagre.graphlib.Graph().setGraph({\n      ranker: hasVisibleLayers ? ranker : null,\n      ranksep: hasVisibleLayers ? 200 : 70,\n      marginx: 40,\n      marginy: 40\n    });\n\n    nodes.forEach(node => {\n      graph.setNode(node.id, node);\n    });\n\n    edges.forEach(edge => {\n      graph.setEdge(edge.source, edge.target, edge);\n    });\n\n    // Run Dagre layout to calculate X/Y positioning\n    dagre.layout(graph);\n\n    return graph;\n  }\n);\n\n/**\n * Reformat node data for use on the chart,\n * and recombine with other data that doesn't affect layout\n */\nexport const getLayoutNodes = createSelector(\n  [getGraph, getNodeType, getNodeLayer],\n  (graph, nodeType, nodeLayer) =>\n    graph\n      ? graph.nodes().map(nodeID => {\n          const node = graph.node(nodeID);\n          return Object.assign({}, node, {\n            layer: nodeLayer[nodeID],\n            type: nodeType[nodeID],\n            order: node.x + node.y * 9999\n          });\n        })\n      : []\n);\n\n/**\n * Reformat edge data for use on the chart\n */\nexport const getLayoutEdges = createSelector(\n  [getGraph],\n  graph =>\n    graph ? graph.edges().map(edge => Object.assign({}, graph.edge(edge))) : []\n);\n\n/**\n * Get width, height and margin of graph\n */\nexport const getGraphSize = createSelector(\n  [getGraph],\n  graph => (graph ? graph.graph() : {})\n);\n\n/**\n * Return the displayed width of the sidebar\n */\nexport const getSidebarWidth = (visibleSidebar, outerChartWidth) => {\n  if (visibleSidebar && outerChartWidth > sidebarBreakpoint) {\n    return sidebarWidth.open;\n  }\n  return sidebarWidth.closed;\n};\n\n/**\n * Convert the DOMRect into an Object, mutate some of the properties,\n * and add some useful new ones\n */\nexport const getChartSize = createSelector(\n  [getVisibleSidebar, state => state.chartSize],\n  (visibleSidebar, chartSize) => {\n    const { left, top, width, height } = chartSize;\n    if (!width || !height) {\n      return {};\n    }\n    const sidebarWidth = getSidebarWidth(visibleSidebar, width);\n    return {\n      left,\n      top,\n      outerWidth: width,\n      outerHeight: height,\n      width: width - sidebarWidth,\n      height,\n      sidebarWidth\n    };\n  }\n);\n\n/**\n * Get chart zoom translation/scale,\n * by comparing native graph width/height to container width/height\n */\nexport const getZoomPosition = createSelector(\n  [getGraphSize, getChartSize],\n  (graph, chart) => {\n    if (!chart.width || !graph.width) {\n      return {\n        scale: 1,\n        translateX: 0,\n        translateY: 0\n      };\n    }\n\n    const scale = Math.min(\n      chart.width / graph.width,\n      chart.height / graph.height\n    );\n    const translateX = chart.width / 2 - (graph.width * scale) / 2;\n    const translateY = chart.height / 2 - (graph.height * scale) / 2;\n\n    return {\n      scale,\n      translateX: translateX + chart.sidebarWidth,\n      translateY\n    };\n  }\n);\n","import { createSelector } from 'reselect';\nimport { getLayoutNodes, getGraphSize } from './layout';\nimport { getVisibleLayerIDs } from './disabled';\n\nconst getLayerName = state => state.layer.name;\n\n/**\n * Get layer positions\n */\nexport const getLayers = createSelector(\n  [getLayoutNodes, getVisibleLayerIDs, getLayerName, getGraphSize],\n  (nodes, layerIDs, layerName, { width }) => {\n    // Get list of layer Y positions from nodes\n    const layerY = nodes.reduce((layerY, node) => {\n      if (!layerY[node.layer]) {\n        layerY[node.layer] = [];\n      }\n      layerY[node.layer].push(node.y);\n      return layerY;\n    }, {});\n\n    /**\n     * Determine the y position and height of a layer band\n     * @param {number} id\n     */\n    const calculateYPos = (layerID, prevID, nextID) => {\n      const yMin = Math.min(...layerY[layerID]);\n      const yMax = Math.max(...layerY[layerID]);\n      const prev = layerY[prevID];\n      const next = layerY[nextID];\n      const topYGap = prev && yMin - Math.max(...prev);\n      const bottomYGap = next && Math.min(...next) - yMax;\n      const yGap = (topYGap || bottomYGap) / 2;\n      const y = yMin - yGap;\n      const height = yMax + yGap - y;\n      return { y, height };\n    };\n\n    return layerIDs.map((id, i) => {\n      const prevID = layerIDs[i - 1];\n      const nextID = layerIDs[i + 1];\n      return {\n        id,\n        name: layerName[id],\n        x: -width / 2,\n        width: width * 2,\n        ...calculateYPos(id, prevID, nextID)\n      };\n    });\n  }\n);\n","import { createSelector } from 'reselect';\n\nconst getEdgeIDs = state => state.edge.ids;\nconst getEdgeSources = state => state.edge.sources;\nconst getEdgeTargets = state => state.edge.targets;\nconst getClickedNode = state => state.node.clicked;\nconst getHoveredNode = state => state.node.hovered;\n\n/**\n * Get the node that should be used as the center of the set of linked nodes\n * @param {Array} edges\n * @param {string} nodeID\n */\nexport const getCentralNode = createSelector(\n  [getClickedNode, getHoveredNode],\n  (clickedNode, hoveredNode) => clickedNode || hoveredNode\n);\n\n/**\n * Recursively search through the edges data for ancestor and descendant nodes\n * @param {Array} edges\n * @param {string} nodeID\n */\nexport const getLinkedNodes = createSelector(\n  [getEdgeIDs, getEdgeSources, getEdgeTargets, getCentralNode],\n  (edges, edgeSources, edgeTargets, nodeID) => {\n    if (!nodeID) {\n      return {};\n    }\n\n    const linkedNodes = {\n      [nodeID]: true\n    };\n\n    const traverseGraph = (prev, next) => {\n      (function walk(id) {\n        edges.forEach(edge => {\n          if (prev[edge] === id) {\n            linkedNodes[next[edge]] = true;\n            walk(next[edge]);\n          }\n        });\n      })(nodeID);\n    };\n\n    const direction = [edgeSources, edgeTargets];\n    traverseGraph.apply(null, direction);\n    traverseGraph.apply(null, direction.reverse());\n\n    return linkedNodes;\n  }\n);\n","import React from 'react';\n\nexport const paths = {\n  // database icon\n  data: [\n    'M6 7.5C6 5.5 8.7 4 12 4c3.2 0 5.9 1.5 6 3.3V17c0 .2 0 .4-.2.6-1.1 1.6-3 2.3-5.8 2.3s-4.7-.7-5.8-2.3A1 1 0 016 17V7.5zm6 8c-1.6 0-3-.4-4-1v2.2c.7.8 2 1.2 4 1.2s3.3-.4 4-1.2v-2.2c-1 .6-2.4 1-4 1zm0-4.5c-1.5 0-3-.3-4-.9v1.6c.8 1.2 2 1.7 4 1.7s3.3-.5 4-1.7v-1.6c-1 .6-2.5.9-4 .9zm0-5c-1.3 0-2.4.3-3.2.8-.6.3-.8.6-.8.7s.2.4.8.7c.8.5 2 .8 3.2.8s2.4-.3 3.2-.8c.6-.3.8-.6.8-.7s-.2-.4-.8-.7c-.8-.5-2-.8-3.2-.8z'\n  ],\n  // function icon\n  task: [\n    'M19.46 4.3l.18.14-1.28 1.54c-2.06-1.71-3.52-1.1-4.55 2.52H16v2h-2.66c-.09.43-.17.89-.25 1.37l-.1.68c-1.2 8.23-4.11 11.46-8.41 8.34l-.19-.14 1.22-1.59c2.58 1.97 4.25.32 5.3-6.22l.1-.68.3-1.76H8v-2h3.78c1.48-5.36 4.12-7.04 7.68-4.2z'\n  ],\n  // sliders icon\n  parameters: [\n    'M8 14v1.5h13v2H8V19H6v-1.5H4v-2h2V14z',\n    'M18.5 5v1.5H21v2h-2.5V10h-2V8.5H4v-2h12.5V5z'\n  ]\n};\n\nexport default ({ className, type }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    {paths[type].map(d => (\n      <path key={d} d={d} />\n    ))}\n  </svg>\n);\n","import { select } from 'd3-selection';\nimport { paths } from '../icons/node-icon';\n\n/**\n * Generate cog/database icon.\n * Inline SVG is required to support image exports\n */\nexport default node => {\n  const svgNode = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n\n  const svg = select(svgNode)\n    .attr('class', 'pipeline-node__icon')\n    .attr('viewBox', '0 0 24 24');\n\n  paths[node.type].forEach(path => {\n    svg.append('path').attr('d', path);\n  });\n\n  return svgNode;\n};\n","import 'd3-transition';\nimport { interpolatePath } from 'd3-interpolate-path';\nimport { select } from 'd3-selection';\nimport { curveBasis, line } from 'd3-shape';\nimport icon from './icon';\n\n/**\n * Render layer bands\n */\nconst drawLayers = function() {\n  const { layers, visibleLayers } = this.props;\n\n  this.el.layers = this.el.layerGroup\n    .selectAll('.pipeline-layer')\n    .data(visibleLayers ? layers : [], layer => layer.id);\n\n  const enterLayers = this.el.layers\n    .enter()\n    .append('rect')\n    .attr('class', 'pipeline-layer');\n\n  this.el.layers.exit().remove();\n\n  this.el.layers = this.el.layers.merge(enterLayers);\n\n  this.el.layers\n    .attr('x', d => d.x)\n    .attr('y', d => d.y)\n    .attr('height', d => d.height)\n    .attr('width', d => d.width);\n};\n\n/**\n * Render layer name labels\n */\nconst drawLayerNames = function() {\n  const {\n    chartSize: { sidebarWidth = 0 },\n    layers,\n    visibleLayers\n  } = this.props;\n\n  this.el.layerNameGroup\n    .transition('layer-names-sidebar-width')\n    .duration(this.DURATION)\n    .style('transform', `translateX(${sidebarWidth}px)`);\n\n  this.el.layerNames = this.el.layerNameGroup\n    .selectAll('.pipeline-layer-name')\n    .data(visibleLayers ? layers : [], layer => layer.id);\n\n  const enterLayerNames = this.el.layerNames\n    .enter()\n    .append('li')\n    .attr('class', 'pipeline-layer-name')\n    .style('opacity', 0)\n    .transition('enter-layer-names')\n    .duration(this.DURATION)\n    .style('opacity', 1);\n\n  this.el.layerNames\n    .exit()\n    .style('opacity', 1)\n    .transition('exit-layer-names')\n    .duration(this.DURATION)\n    .style('opacity', 0)\n    .remove();\n\n  this.el.layerNames = this.el.layerNames.merge(enterLayerNames);\n\n  this.el.layerNames.text(d => d.name).attr('dy', 5);\n};\n\n/**\n * Render node icons and name labels\n */\nconst drawNodes = function() {\n  const {\n    centralNode,\n    linkedNodes,\n    nodeActive,\n    nodeSelected,\n    nodes,\n    textLabels\n  } = this.props;\n\n  this.el.nodes = this.el.nodeGroup\n    .selectAll('.pipeline-node')\n    .data(nodes, node => node.id);\n\n  const enterNodes = this.el.nodes\n    .enter()\n    .append('g')\n    .attr('tabindex', '0')\n    .attr('class', 'pipeline-node');\n\n  enterNodes\n    .attr('transform', node => `translate(${node.x}, ${node.y})`)\n    .attr('opacity', 0);\n\n  enterNodes.append('rect');\n\n  enterNodes.append(icon);\n\n  enterNodes\n    .append('text')\n    .text(node => node.name)\n    .attr('text-anchor', 'middle')\n    .attr('dy', 5)\n    .attr('dx', node => node.textOffset);\n\n  this.el.nodes\n    .exit()\n    .transition('exit-nodes')\n    .duration(this.DURATION)\n    .attr('opacity', 0)\n    .remove();\n\n  this.el.nodes = this.el.nodes\n    .merge(enterNodes)\n    .attr('data-id', node => node.id)\n    .classed('pipeline-node--parameters', node => node.type === 'parameters')\n    .classed('pipeline-node--data', node => node.type === 'data')\n    .classed('pipeline-node--task', node => node.type === 'task')\n    .classed('pipeline-node--icon', !textLabels)\n    .classed('pipeline-node--text', textLabels)\n    .classed('pipeline-node--active', node => nodeActive[node.id])\n    .classed('pipeline-node--selected', node => nodeSelected[node.id])\n    .classed(\n      'pipeline-node--faded',\n      node => centralNode && !linkedNodes[node.id]\n    )\n    .on('click', this.handleNodeClick)\n    .on('mouseover', this.handleNodeMouseOver)\n    .on('mouseout', this.handleNodeMouseOut)\n    .on('focus', this.handleNodeMouseOver)\n    .on('blur', this.handleNodeMouseOut)\n    .on('keydown', this.handleNodeKeyDown);\n\n  this.el.nodes\n    .transition('update-nodes')\n    .duration(this.DURATION)\n    .attr('opacity', 1)\n    .attr('transform', node => `translate(${node.x}, ${node.y})`)\n    .end()\n    .catch(() => {})\n    .finally(() => {\n      // Sort nodes so tab focus order follows X/Y position\n      this.el.nodes.sort((a, b) => a.order - b.order);\n    });\n\n  this.el.nodes\n    .select('rect')\n    .attr('width', node => node.width - 5)\n    .attr('height', node => node.height - 5)\n    .attr('x', node => (node.width - 5) / -2)\n    .attr('y', node => (node.height - 5) / -2)\n    .attr('rx', node => (node.type === 'task' ? 0 : node.height / 2));\n\n  this.el.nodes\n    .select('.pipeline-node__icon')\n    .transition('node-icon-offset')\n    .duration(150)\n    .attr('width', node => node.iconSize)\n    .attr('height', node => node.iconSize)\n    .attr('x', node => node.iconOffset)\n    .attr('y', node => node.iconSize / -2);\n};\n\n/**\n * Render edge lines\n */\nconst drawEdges = function() {\n  const { edges, centralNode, linkedNodes } = this.props;\n\n  this.el.edges = this.el.edgeGroup\n    .selectAll('.pipeline-edge')\n    .data(edges, edge => edge.id);\n\n  // Set up line shape function\n  const lineShape = line()\n    .x(d => d.x)\n    .y(d => d.y)\n    .curve(curveBasis);\n\n  // Create edges\n  const enterEdges = this.el.edges\n    .enter()\n    .append('g')\n    .attr('class', 'pipeline-edge')\n    .attr('opacity', 0);\n\n  enterEdges.append('path').attr('marker-end', d => `url(#pipeline-arrowhead)`);\n\n  this.el.edges\n    .exit()\n    .transition('exit-edges')\n    .duration(this.DURATION)\n    .attr('opacity', 0)\n    .remove();\n\n  this.el.edges = this.el.edges.merge(enterEdges);\n\n  this.el.edges\n    .attr('data-id', edge => edge.id)\n    .classed(\n      'pipeline-edge--faded',\n      ({ source, target }) =>\n        centralNode && (!linkedNodes[source] || !linkedNodes[target])\n    )\n    .transition('show-edges')\n    .duration(this.DURATION)\n    .attr('opacity', 1);\n\n  this.el.edges\n    .select('path')\n    .transition('update-edges')\n    .duration(this.DURATION)\n    .attrTween('d', function(edge) {\n      const current = edge.points && lineShape(edge.points);\n      const previous = select(this).attr('d') || current;\n      return interpolatePath(previous, current);\n    });\n};\n\n/**\n * Render chart to the DOM with D3\n */\nconst draw = function() {\n  drawLayers.call(this);\n  drawLayerNames.call(this);\n  drawEdges.call(this);\n  drawNodes.call(this);\n};\n\nexport default draw;\n","import React from 'react';\nimport classnames from 'classnames';\nimport './tooltip.css';\n\nconst zeroWidthSpace = String.fromCharCode(0x200b);\n\n/**\n * Force tooltip text to break on special characters\n * @param {string} text Any text with special characters\n * @return {string} text\n */\nexport const insertZeroWidthSpace = text =>\n  text.replace(/([^\\w\\s]|[_])/g, `${zeroWidthSpace}$1${zeroWidthSpace}`);\n\n/**\n * Display flowchart node tooltip\n * @param {object} chartSize Chart dimensions in pixels\n * @param {object} targetRect event.target.getBoundingClientRect()\n * @param {boolean} visible Whether to show the tooltip\n * @param {string} text Tooltip display label\n */\nconst Tooltip = ({ chartSize, targetRect, visible, text }) => {\n  const { left, top, width, height, outerWidth, sidebarWidth } = chartSize;\n  const isRight = targetRect.left - sidebarWidth > width / 2;\n  const isTop = targetRect.top < height / 2;\n  const xOffset = isRight ? targetRect.left - outerWidth : targetRect.left;\n  const yOffset = isTop ? targetRect.top + targetRect.height : targetRect.top;\n  const x = xOffset - left + targetRect.width / 2;\n  const y = yOffset - top;\n\n  return (\n    <div\n      className={classnames('pipeline-tooltip', {\n        'pipeline-tooltip--visible': visible,\n        'pipeline-tooltip--right': isRight,\n        'pipeline-tooltip--top': isTop\n      })}\n      style={{ transform: `translate(${x}px, ${y}px)` }}>\n      <div className=\"pipeline-tooltip__text\">{insertZeroWidthSpace(text)}</div>\n    </div>\n  );\n};\n\nTooltip.defaultProps = {\n  chartSize: {},\n  targetRect: {},\n  visible: false,\n  text: ''\n};\n\nexport default Tooltip;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport 'd3-transition';\nimport { select, event } from 'd3-selection';\nimport { zoom, zoomIdentity } from 'd3-zoom';\nimport { updateChartSize } from '../../actions';\nimport { toggleNodeClicked, toggleNodeHovered } from '../../actions/nodes';\nimport { getNodeActive, getNodeSelected } from '../../selectors/nodes';\nimport {\n  getChartSize,\n  getGraphSize,\n  getLayoutNodes,\n  getLayoutEdges,\n  getZoomPosition\n} from '../../selectors/layout';\nimport { getLayers } from '../../selectors/layers';\nimport { getCentralNode, getLinkedNodes } from '../../selectors/linked-nodes';\nimport draw from './draw';\nimport Tooltip from '../tooltip';\nimport './styles/flowchart.css';\n\n/**\n * Display a pipeline flowchart, mostly rendered with D3\n */\nexport class FlowChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tooltip: {}\n    };\n\n    this.DURATION = 700;\n\n    this.containerRef = React.createRef();\n    this.svgRef = React.createRef();\n    this.wrapperRef = React.createRef();\n    this.edgesRef = React.createRef();\n    this.nodesRef = React.createRef();\n    this.layersRef = React.createRef();\n    this.layerNamesRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.selectD3Elements();\n    this.updateChartSize();\n    this.initZoomBehaviour();\n    this.drawChart();\n    this.zoomChart();\n    this.addGlobalEventListeners();\n  }\n\n  componentWillUnmount() {\n    this.removeGlobalEventListeners();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.visibleSidebar !== this.props.visibleSidebar) {\n      this.updateChartSize();\n    }\n    if (prevProps.zoom !== this.props.zoom) {\n      this.zoomChart();\n    }\n    this.drawChart();\n  }\n\n  /**\n   * Create D3 element selectors\n   */\n  selectD3Elements() {\n    this.el = {\n      svg: select(this.svgRef.current),\n      wrapper: select(this.wrapperRef.current),\n      edgeGroup: select(this.edgesRef.current),\n      nodeGroup: select(this.nodesRef.current),\n      layerGroup: select(this.layersRef.current),\n      layerNameGroup: select(this.layerNamesRef.current)\n    };\n  }\n\n  /**\n   * Configure globals for the container dimensions,\n   * and apply them to the chart SVG\n   */\n  updateChartSize() {\n    this.props.onUpdateChartSize(\n      this.containerRef.current.getBoundingClientRect()\n    );\n  }\n\n  /**\n   * Add window event listeners on mount\n   */\n  addGlobalEventListeners() {\n    // Add ResizeObserver to listen for any changes in the container's width/height\n    // (with event listener fallback)\n    if (window.ResizeObserver) {\n      this.resizeObserver =\n        this.resizeObserver ||\n        new window.ResizeObserver(this.handleWindowResize);\n      this.resizeObserver.observe(this.containerRef.current);\n    } else {\n      window.addEventListener('resize', this.handleWindowResize);\n    }\n    // Print event listeners\n    window.addEventListener('beforeprint', this.handleBeforePrint);\n    window.addEventListener('afterprint', this.handleAfterPrint);\n  }\n\n  /**\n   * Remove window event listeners on unmount\n   */\n  removeGlobalEventListeners() {\n    // ResizeObserver\n    if (window.ResizeObserver) {\n      this.resizeObserver.unobserve(this.containerRef.current);\n    } else {\n      window.removeEventListener('resize', this.handleWindowResize);\n    }\n    // Print event listeners\n    window.removeEventListener('beforeprint', this.handleBeforePrint);\n    window.removeEventListener('afterprint', this.handleAfterPrint);\n  }\n\n  /**\n   * Handle window resize\n   */\n  handleWindowResize = () => {\n    this.updateChartSize();\n  };\n\n  /**\n   * Add viewBox on window print so that the SVG can be scaled to fit\n   */\n  handleBeforePrint = () => {\n    const gs = this.props.graphSize;\n    const width = gs.width + gs.marginx * 2;\n    const height = gs.height + gs.marginy * 2;\n    this.el.svg.attr('viewBox', `0 0 ${width} ${height}`);\n  };\n\n  /**\n   * Remove viewBox once printing is done\n   */\n  handleAfterPrint = () => {\n    this.el.svg.attr('viewBox', null);\n  };\n\n  /**\n   * Setup D3 zoom behaviour on component mount\n   */\n  initZoomBehaviour() {\n    this.zoomBehaviour = zoom().on('zoom', () => {\n      const { k: scale, y } = event.transform;\n      const { sidebarWidth } = this.props.chartSize;\n      const { width, height } = this.props.graphSize;\n\n      // Limit zoom translate extent: This needs to be recalculated on zoom\n      // as it needs access to the current scale to correctly multiply the\n      // sidebarWidth by the scale to offset it properly\n      const margin = 500;\n      this.zoomBehaviour.translateExtent([\n        [-sidebarWidth / scale - margin, -margin],\n        [width + margin, height + margin]\n      ]);\n\n      // Transform the <g> that wraps the chart\n      this.el.wrapper.attr('transform', event.transform);\n\n      // Update layer label y positions\n      if (this.el.layerNames) {\n        this.el.layerNames.style('transform', d => {\n          const ty = y + (d.y + d.height / 2) * scale;\n          return `translateY(${ty}px)`;\n        });\n      }\n\n      // Hide the tooltip so it doesn't get misaligned to its node\n      this.hideTooltip();\n    });\n    this.el.svg.call(this.zoomBehaviour);\n  }\n\n  /**\n   * Zoom and scale to fit\n   */\n  zoomChart() {\n    const { scale = 1, translateX = 0, translateY = 0 } = this.props.zoom;\n\n    // Limit zoom scale extent\n    this.zoomBehaviour.scaleExtent([scale * 0.8, 2]);\n\n    // Auto zoom to fit the chart nicely on the page\n    this.el.svg\n      .transition()\n      .duration(this.DURATION)\n      .call(\n        this.zoomBehaviour.transform,\n        zoomIdentity.translate(translateX, translateY).scale(scale)\n      );\n  }\n\n  /**\n   * Render chart to the DOM with D3\n   */\n  drawChart() {\n    draw.call(this);\n  }\n\n  /**\n   * Enable a node's focus state and highlight linked nodes\n   * @param {Object} node Datum for a single node\n   */\n  handleNodeClick = node => {\n    this.props.onToggleNodeClicked(node.id);\n    event.stopPropagation();\n  };\n\n  /**\n   * Remove a node's focus state and dim linked nodes\n   */\n  handleChartClick = () => {\n    this.props.onToggleNodeClicked(null);\n  };\n\n  /**\n   * Enable a node's active state, show tooltip, and highlight linked nodes\n   * @param {Object} node Datum for a single node\n   */\n  handleNodeMouseOver = node => {\n    this.props.onToggleNodeHovered(node.id);\n    this.showTooltip(node);\n  };\n\n  /**\n   * Remove a node's active state, hide tooltip, and dim linked nodes\n   * @param {Object} node Datum for a single node\n   */\n  handleNodeMouseOut = () => {\n    this.props.onToggleNodeHovered(null);\n    this.hideTooltip();\n  };\n\n  /**\n   * Handle keydown event when a node is focused\n   * @param {Object} node Datum for a single node\n   */\n  handleNodeKeyDown = node => {\n    const ENTER = 13;\n    const ESCAPE = 27;\n    if (event.keyCode === ENTER) {\n      this.handleNodeClick(node);\n    }\n    if (event.keyCode === ESCAPE) {\n      this.handleChartClick();\n      this.handleNodeMouseOut(node);\n    }\n  };\n\n  /**\n   * Show, fill and and position the tooltip\n   * @param {Object} node A node datum\n   */\n  showTooltip(node) {\n    this.setState({\n      tooltip: {\n        targetRect: event.target.getBoundingClientRect(),\n        text: node.fullName,\n        visible: true\n      }\n    });\n  }\n\n  /**\n   * Hide the tooltip\n   */\n  hideTooltip() {\n    if (this.state.tooltip.visible) {\n      this.setState({\n        tooltip: {\n          ...this.state.tooltip,\n          visible: false\n        }\n      });\n    }\n  }\n\n  /**\n   * Render React elements\n   */\n  render() {\n    const { chartSize, visibleLayers } = this.props;\n    const { outerWidth = 0, outerHeight = 0 } = chartSize;\n\n    return (\n      <div\n        className=\"pipeline-flowchart kedro\"\n        ref={this.containerRef}\n        onClick={this.handleChartClick}>\n        <svg\n          id=\"pipeline-graph\"\n          className=\"pipeline-flowchart__graph\"\n          width={outerWidth}\n          height={outerHeight}\n          ref={this.svgRef}>\n          <defs>\n            <marker\n              id=\"pipeline-arrowhead\"\n              className=\"pipeline-flowchart__arrowhead\"\n              viewBox=\"0 0 10 10\"\n              refX=\"7\"\n              refY=\"5\"\n              markerUnits=\"strokeWidth\"\n              markerWidth=\"8\"\n              markerHeight=\"6\"\n              orient=\"auto\">\n              <path d=\"M 0 0 L 10 5 L 0 10 L 4 5 z\" />\n            </marker>\n          </defs>\n          <g id=\"zoom-wrapper\" ref={this.wrapperRef}>\n            <g className=\"pipeline-flowchart__layers\" ref={this.layersRef} />\n            <g className=\"pipeline-flowchart__edges\" ref={this.edgesRef} />\n            <g\n              id=\"nodes\"\n              className=\"pipeline-flowchart__nodes\"\n              ref={this.nodesRef}\n            />\n          </g>\n        </svg>\n        <ul\n          className={classnames('pipeline-flowchart__layer-names', {\n            'pipeline-flowchart__layer-names--visible': visibleLayers\n          })}\n          ref={this.layerNamesRef}\n        />\n        <Tooltip chartSize={chartSize} {...this.state.tooltip} />\n      </div>\n    );\n  }\n}\n\nexport const mapStateToProps = state => ({\n  centralNode: getCentralNode(state),\n  chartSize: getChartSize(state),\n  edges: getLayoutEdges(state),\n  graphSize: getGraphSize(state),\n  layers: getLayers(state),\n  linkedNodes: getLinkedNodes(state),\n  nodes: getLayoutNodes(state),\n  nodeActive: getNodeActive(state),\n  nodeSelected: getNodeSelected(state),\n  textLabels: state.textLabels,\n  visibleLayers: state.visible.layers,\n  visibleSidebar: state.visible.sidebar,\n  zoom: getZoomPosition(state)\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  onToggleNodeClicked: nodeClicked => {\n    dispatch(toggleNodeClicked(nodeClicked));\n  },\n  onToggleNodeHovered: nodeHovered => {\n    dispatch(toggleNodeHovered(nodeHovered));\n  },\n  onUpdateChartSize: chartSize => {\n    dispatch(updateChartSize(chartSize));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FlowChart);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Checkbox from '@quantumblack/kedro-ui/lib/components/checkbox';\nimport Dropdown from '@quantumblack/kedro-ui/lib/components/dropdown';\nimport '@quantumblack/kedro-ui/lib/components/menu-option/menu-option.css';\nimport { toggleTagActive, toggleTagFilter } from '../../actions/tags';\nimport { getTagData, getTagCount } from '../../selectors/tags';\nimport './tag-list.css';\n\n/**\n * A Dropdown displaying a list of tags with checkboxes to toggle them on/off\n * @param {Object} tagCount Number of enabled and active tags\n * @param {Function} onToggleTagActive Handle toggling a tag's active state\n * @param {Function} onToggleTagFilter Handle toggling a tag's enabled state\n * @param {Array} tags List of tags for given pipline\n * @param {string} theme Kedro UI light/dark theme\n */\nexport const TagList = ({\n  tagCount,\n  onToggleTagActive,\n  onToggleTagFilter,\n  tags,\n  theme\n}) => (\n  <div className=\"pipeline-tags\">\n    <Dropdown\n      theme={theme}\n      width={null}\n      defaultText={`Tag filters (${tagCount.enabled}/${tagCount.total})`}>\n      <React.Fragment>\n        {tagCount.total > 0 ? (\n          <ul className=\"pipeline-tags__tag-list\">\n            {tags.map(tag => (\n              <li\n                key={`tag-${tag.id}`}\n                title={tag.name}\n                className=\"pipeline-tags__tag-list-item kui-menu-option\"\n                onMouseEnter={() => onToggleTagActive(tag.id, true)}\n                onMouseLeave={() => onToggleTagActive(tag.id, false)}>\n                <Checkbox\n                  checked={tag.enabled}\n                  label={<span>{tag.name}</span>}\n                  name={tag.id}\n                  onChange={(e, { checked }) =>\n                    onToggleTagFilter(tag.id, checked)\n                  }\n                  theme={theme}\n                />\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <div className=\"pipeline-tags__empty kui-menu-option\">\n            There are no tags used in this pipeline.\n          </div>\n        )}\n      </React.Fragment>\n    </Dropdown>\n  </div>\n);\n\nexport const mapStateToProps = state => {\n  const tags = getTagData(state);\n  const tagCount = getTagCount(state);\n  return {\n    tagCount,\n    tags,\n    theme: state.theme\n  };\n};\n\nexport const mapDispatchToProps = dispatch => ({\n  onToggleTagActive: (tagID, active) => {\n    dispatch(toggleTagActive(tagID, active));\n  },\n  onToggleTagFilter: (tagID, enabled) => {\n    dispatch(toggleTagFilter(tagID, enabled));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TagList);\n","import { createSelector } from 'reselect';\nimport utils from '@quantumblack/kedro-ui/lib/utils';\nconst { escapeRegExp, getHighlightedText } = utils;\n\n/**\n * Get a list of IDs of the visible nodes\n * @param {object} nodes Grouped nodes\n * @return {array} List of node IDs\n */\nexport const getNodeIDs = nodes => {\n  const getNodeIDs = type => nodes[type].map(node => node.id);\n  const concatNodeIDs = (nodeIDs, type) => nodeIDs.concat(getNodeIDs(type));\n\n  return Object.keys(nodes).reduce(concatNodeIDs, []);\n};\n\n/**\n * Add a new highlightedLabel field to each of the node objects\n * @param {object} nodes Grouped lists of nodes\n * @param {string} searchValue Search term\n * @return {object} The grouped nodes with highlightedLabel fields added\n */\nexport const highlightMatch = (nodes, searchValue) => {\n  const addHighlightedLabel = node => ({\n    highlightedLabel: getHighlightedText(node.name, searchValue),\n    ...node\n  });\n  const addLabelsToNodes = (newNodes, type) => ({\n    ...newNodes,\n    [type]: nodes[type].map(addHighlightedLabel)\n  });\n\n  return Object.keys(nodes).reduce(addLabelsToNodes, {});\n};\n\n/**\n * Check whether a name matches the search text\n * @param {string} name\n * @param {string} searchValue\n * @return {boolean} True if match\n */\nexport const nodeMatchesSearch = (node, searchValue) => {\n  const valueRegex = searchValue\n    ? new RegExp(escapeRegExp(searchValue), 'gi')\n    : '';\n  return Boolean(node.name.match(valueRegex));\n};\n\n/**\n * Return only the results that match the search text\n * @param {object} nodes Grouped lists of nodes\n * @param {string} searchValue Search term\n * @return {object} Grouped nodes\n */\nexport const filterNodes = (nodes, searchValue) => {\n  const filterNodesByType = type =>\n    nodes[type].filter(node => nodeMatchesSearch(node, searchValue));\n  const filterNodeLists = (newNodes, type) => ({\n    ...newNodes,\n    [type]: filterNodesByType(type)\n  });\n\n  return Object.keys(nodes).reduce(filterNodeLists, {});\n};\n\n/**\n * Return filtered/highlighted nodes, and filtered node IDs\n * @param {object} nodes Grouped lists of nodes\n * @param {string} searchValue Search term\n * @return {object} Grouped nodes, and node IDs\n */\nconst getFilteredNodes = createSelector(\n  [state => state.nodes, state => state.searchValue],\n  (nodes, searchValue) => {\n    const filteredNodes = filterNodes(nodes, searchValue);\n\n    return {\n      filteredNodes: highlightMatch(filteredNodes, searchValue),\n      nodeIDs: getNodeIDs(filteredNodes)\n    };\n  }\n);\n\nexport default getFilteredNodes;\n","import React from 'react';\nimport SearchBar from '@quantumblack/kedro-ui/lib/components/search-bar';\nimport utils from '@quantumblack/kedro-ui/lib/utils';\nimport { connect } from 'react-redux';\n\n/**\n * Handle Node List Search\n * @param {function} onUpdateSearchValue Event handler\n * @param {string} searchValue Search text\n * @param {string} theme Light/dark theme for Kedro-UI component\n */\nexport const NodeListSearch = ({ onUpdateSearchValue, searchValue, theme }) => {\n  /**\n   * Listen for keyboard events, and trigger relevant actions\n   * @param {number} keyCode The key event keycode\n   */\n  const handleKeyDown = event => {\n    utils.handleKeyEvent(event.keyCode, {\n      escape: onUpdateSearchValue.bind(this, '')\n    });\n  };\n\n  return (\n    <div className=\"pipeline-nodelist-search\" onKeyDown={handleKeyDown}>\n      <SearchBar\n        onChange={onUpdateSearchValue}\n        value={searchValue}\n        theme={theme}\n      />\n    </div>\n  );\n};\n\nexport const mapStateToProps = state => ({\n  theme: state.theme\n});\n\nexport default connect(mapStateToProps)(NodeListSearch);\n","import React from 'react';\n\nexport default ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M12 5.7c4.4 0 8 5 8 6s-3.6 6-8 6-8-5-8-6 3.6-6 8-6zm0 2a4 4 0 100 8 4 4 0 000-8zm0 2a2 2 0 110 4 2 2 0 010-4z\" />\n  </svg>\n);\n","import React from 'react';\n\nexport default ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M18.6 5.17l1.4 1.4-2.2 2.19C19.18 10.09 20 11.5 20 12c0 1.03-3.58 6-8 6a6.8 6.8 0 01-2.8-.64L6.56 20l-1.4-1.4L18.6 5.17zm-2.8 5.59l-1.92 1.93a2 2 0 01-1.2 1.19l-1.92 1.92a4 4 0 005.04-5.04zM12 6c.85 0 1.68.19 2.45.5l-1.6 1.59a4 4 0 00-4.76 4.76L5.94 15C4.74 13.75 4 12.48 4 12c0-1.06 3.58-6 8-6z\" />\n  </svg>\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { toggleNodesDisabled } from '../../actions/nodes';\nimport VisibleIcon from '../icons/visible';\nimport InvisibleIcon from '../icons/invisible';\n\nexport const NodeListToggleAll = ({ onToggleNodesDisabled, nodeIDs }) => (\n  <div className=\"kedro pipeline-nodelist__toggle\">\n    <h2 className=\"pipeline-nodelist__toggle__title\">All Elements</h2>\n    <div className=\"pipeline-nodelist__toggle__row\">\n      <button\n        onClick={() => onToggleNodesDisabled(nodeIDs, false)}\n        className=\"pipeline-nodelist__toggle__button\">\n        <VisibleIcon className=\"pipeline-nodelist__toggle__icon\" />\n        Show all\n      </button>\n      <button\n        onClick={() => onToggleNodesDisabled(nodeIDs, true)}\n        className=\"pipeline-nodelist__toggle__button\">\n        <InvisibleIcon className=\"pipeline-nodelist__toggle__icon\" />\n        Hide all\n      </button>\n    </div>\n  </div>\n);\n\nexport const mapDispatchToProps = dispatch => ({\n  onToggleNodesDisabled: (nodeIDs, disabled) => {\n    dispatch(toggleNodesDisabled(nodeIDs, disabled));\n  }\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(NodeListToggleAll);\n","import { createSelector } from 'reselect';\nimport { getNodeDisabled } from './disabled';\nimport { arrayToObject } from '../utils';\n\nconst getNodeIDs = state => state.node.ids;\nconst getNodeType = state => state.node.type;\nconst getNodeTypeIDs = state => state.nodeType.ids;\nconst getNodeTypeName = state => state.nodeType.name;\nconst getNodeTypeDisabled = state => state.nodeType.disabled;\n\n/**\n * Calculate the total number of nodes (and the number of visible nodes)\n * for each node-type\n */\nexport const getTypeNodeCount = createSelector(\n  [getNodeTypeIDs, getNodeIDs, getNodeType, getNodeDisabled],\n  (types, nodeIDs, nodeType, nodeDisabled) =>\n    arrayToObject(types, type => {\n      const typeNodeIDs = nodeIDs.filter(nodeID => nodeType[nodeID] === type);\n      const visibleTypeNodeIDs = typeNodeIDs.filter(\n        nodeID => !nodeDisabled[nodeID]\n      );\n      return {\n        total: typeNodeIDs.length,\n        visible: visibleTypeNodeIDs.length\n      };\n    })\n);\n\n/**\n * Get formatted list of node type objects\n */\nexport const getNodeTypes = createSelector(\n  [getNodeTypeIDs, getNodeTypeName, getNodeTypeDisabled, getTypeNodeCount],\n  (types, typeName, typeDisabled, typeNodeCount) =>\n    types.map(id => ({\n      id,\n      name: typeName[id],\n      disabled: Boolean(typeDisabled[id]),\n      nodeCount: typeNodeCount[id]\n    }))\n);\n","import React from 'react';\nimport classnames from 'classnames';\nimport NodeIcon from '../icons/node-icon';\nimport VisibleIcon from '../icons/visible';\nimport InvisibleIcon from '../icons/invisible';\n\nconst NodeListRow = ({\n  active,\n  checked,\n  children,\n  disabled,\n  id,\n  label,\n  name,\n  onMouseEnter,\n  onMouseLeave,\n  onChange,\n  onClick,\n  selected,\n  type\n}) => {\n  const VisibilityIcon = checked ? VisibleIcon : InvisibleIcon;\n  const visible = Boolean(onClick && !disabled && checked);\n  const faded = disabled || !checked;\n\n  return (\n    <div\n      className={classnames('pipeline-nodelist__row kedro', {\n        'pipeline-nodelist__row--visible': visible,\n        'pipeline-nodelist__row--active': active,\n        'pipeline-nodelist__row--selected': selected,\n        'pipeline-nodelist__row--disabled': disabled\n      })}\n      onMouseEnter={visible ? onMouseEnter : null}\n      onMouseLeave={visible ? onMouseLeave : null}>\n      <button\n        className=\"pipeline-nodelist__row__text\"\n        onClick={onClick}\n        onFocus={onMouseEnter}\n        onBlur={onMouseLeave}\n        disabled={!visible}\n        title={children ? null : name}>\n        <NodeIcon\n          className={classnames(\n            'pipeline-nodelist__row__type-icon pipeline-nodelist__row__icon',\n            {\n              'pipeline-nodelist__row__type-icon--faded': faded,\n              'pipeline-nodelist__row__type-icon--nested': !children\n            }\n          )}\n          type={type}\n        />\n        <span\n          className={classnames('pipeline-nodelist__row__label', {\n            'pipeline-nodelist__row__label--faded': faded\n          })}\n          dangerouslySetInnerHTML={{ __html: label }}\n        />\n      </button>\n      {children}\n      <label htmlFor={id} className=\"pipeline-nodelist__row__visibility\">\n        <input\n          id={id}\n          className=\"pipeline-nodelist__row__checkbox\"\n          type=\"checkbox\"\n          checked={checked}\n          disabled={disabled}\n          name={name}\n          onChange={onChange}\n        />\n        <VisibilityIcon\n          aria-label={name}\n          className={classnames(\n            'pipeline-nodelist__row__icon pipeline-nodelist__row__visibility-icon',\n            {\n              'pipeline-nodelist__row__visibility-icon--unchecked': !checked\n            }\n          )}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default NodeListRow;\n","import React from 'react';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport { Flipped } from 'react-flip-toolkit';\nimport NodeListRow from './node-list-row';\nimport { toggleTypeDisabled } from '../../actions/node-type';\n\nexport const NodeListGroup = ({\n  children,\n  collapsed,\n  onToggleTypeDisabled,\n  onToggleCollapsed,\n  type\n}) => (\n  <Flipped flipId={type.id}>\n    <li>\n      <Flipped inverseFlipId={type.id} scale>\n        <div>\n          <h3 className=\"pipeline-nodelist__heading\">\n            <NodeListRow\n              checked={!type.disabled}\n              id={type.id}\n              label={`${type.name} <i>(${type.nodeCount.visible}/${\n                type.nodeCount.total\n              })</i>`}\n              name={type.name}\n              onChange={e => {\n                onToggleTypeDisabled(type.id, !e.target.checked);\n              }}\n              type={type.id}>\n              <button\n                aria-label={`${\n                  collapsed ? 'Show' : 'Hide'\n                } ${type.name.toLowerCase()}`}\n                onClick={() => onToggleCollapsed(type.id)}\n                className={classnames('pipeline-type-group-toggle', {\n                  'pipeline-type-group-toggle--alt': collapsed\n                })}\n              />\n            </NodeListRow>\n          </h3>\n          <Flipped\n            flipId={`${type.id}-children`}\n            onAppear={el => {\n              el.classList.add('pipeline-nodelist--fade-in');\n              el.onanimationend = () => {\n                el.style.opacity = 1;\n                el.classList.remove('pipeline-nodelist--fade-in');\n              };\n            }}\n            onExit={(el, i, removeElement) => {\n              el.style.opacity = 0;\n              el.classList.add('pipeline-nodelist--fade-out');\n              el.onanimationend = removeElement;\n            }}\n            opacity>\n            {collapsed ? null : children}\n          </Flipped>\n        </div>\n      </Flipped>\n    </li>\n  </Flipped>\n);\n\nexport const mapDispatchToProps = dispatch => ({\n  onToggleTypeDisabled: (typeID, disabled) => {\n    dispatch(toggleTypeDisabled(typeID, disabled));\n  }\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(NodeListGroup);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Flipper } from 'react-flip-toolkit';\nimport utils from '@quantumblack/kedro-ui/lib/utils';\nimport { loadState, saveState } from '../../store/helpers';\nimport { getNodeActive, getNodeSelected } from '../../selectors/nodes';\nimport { getNodeTypes } from '../../selectors/node-types';\nimport NodeListGroup from './node-list-group';\nimport NodeListRow from './node-list-row';\nimport {\n  toggleNodeClicked,\n  toggleNodeHovered,\n  toggleNodesDisabled\n} from '../../actions/nodes';\n\nconst storedState = loadState();\n\nconst NodeListGroups = ({\n  onToggleNodeClicked,\n  onToggleNodesDisabled,\n  onToggleNodeHovered,\n  nodes,\n  nodeActive,\n  nodeSelected,\n  types\n}) => {\n  // Deselect node on Escape key\n  const handleKeyDown = event => {\n    utils.handleKeyEvent(event.keyCode, {\n      escape: () => onToggleNodeClicked(null)\n    });\n  };\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  });\n\n  const [collapsed, setCollapsed] = useState(storedState.groupsCollapsed || {});\n\n  // Collapse/expand node group\n  const onToggleCollapsed = typeID => {\n    const groupsCollapsed = Object.assign({}, collapsed, {\n      [typeID]: !collapsed[typeID]\n    });\n    setCollapsed(groupsCollapsed);\n    saveState({ groupsCollapsed });\n  };\n\n  // Toggle node selection depending on whether it's already selected\n  const handleNodeSelection = nodeID => {\n    if (nodeSelected[nodeID]) {\n      onToggleNodeClicked(null);\n    } else {\n      onToggleNodeClicked(nodeID);\n    }\n  };\n\n  const renderTypeGroup = type => {\n    if (!nodes[type.id]) {\n      return null;\n    }\n    return (\n      <NodeListGroup\n        key={type.id}\n        onToggleCollapsed={onToggleCollapsed}\n        type={type}\n        collapsed={collapsed[type.id]}>\n        <ul className=\"pipeline-nodelist pipeline-nodelist--nested\">\n          {nodes[type.id].map(node => (\n            <li key={node.id}>\n              <NodeListRow\n                active={nodeActive[node.id]}\n                checked={!node.disabled_node}\n                disabled={node.disabled_tag || node.disabled_type}\n                id={node.id}\n                label={node.highlightedLabel}\n                name={node.name}\n                onClick={() => handleNodeSelection(node.id)}\n                onMouseEnter={() => onToggleNodeHovered(node.id)}\n                onMouseLeave={() => onToggleNodeHovered(null)}\n                onChange={e => {\n                  onToggleNodesDisabled([node.id], !e.target.checked);\n                }}\n                selected={nodeSelected[node.id]}\n                type={node.type}\n              />\n            </li>\n          ))}\n        </ul>\n      </NodeListGroup>\n    );\n  };\n\n  return (\n    <Flipper flipKey={collapsed}>\n      <ul className=\"pipeline-nodelist\">{types.map(renderTypeGroup)}</ul>\n    </Flipper>\n  );\n};\n\nexport const mapStateToProps = state => ({\n  nodeActive: getNodeActive(state),\n  nodeSelected: getNodeSelected(state),\n  types: getNodeTypes(state)\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  onToggleNodeClicked: nodeID => {\n    dispatch(toggleNodeClicked(nodeID));\n  },\n  onToggleNodeHovered: nodeID => {\n    dispatch(toggleNodeHovered(nodeID));\n  },\n  onToggleNodesDisabled: (nodeIDs, disabled) => {\n    dispatch(toggleNodesDisabled(nodeIDs, disabled));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NodeListGroups);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { getGroupedNodes } from '../../selectors/nodes';\nimport getFilteredNodes from './filter-nodes';\nimport NodeListSearch from './node-list-search';\nimport NodeListToggleAll from './node-list-toggle';\nimport NodeListGroups from './node-list-groups';\nimport './styles/node-list.css';\n\n/**\n * Scrollable list of toggleable nodes, with search & filter functionality\n */\nconst NodeList = ({ nodes }) => {\n  const [searchValue, updateSearchValue] = useState('');\n  const { filteredNodes, nodeIDs } = getFilteredNodes({ nodes, searchValue });\n\n  return (\n    <React.Fragment>\n      <NodeListSearch\n        onUpdateSearchValue={updateSearchValue}\n        searchValue={searchValue}\n      />\n      <Scrollbars\n        className=\"pipeline-nodelist-scrollbars\"\n        style={{ width: 'auto' }}\n        autoHide\n        hideTracksWhenNotNeeded>\n        <NodeListToggleAll nodeIDs={nodeIDs} />\n        <NodeListGroups nodes={filteredNodes} />\n      </Scrollbars>\n    </React.Fragment>\n  );\n};\n\nexport const mapStateToProps = state => ({\n  nodes: getGroupedNodes(state)\n});\n\nexport default connect(mapStateToProps)(NodeList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport LabelIcon from '../icons/label';\nimport LayersIcon from '../icons/layers';\nimport MenuIcon from '../icons/menu';\nimport ThemeIcon from '../icons/theme';\nimport ExportIcon from '../icons/export';\n\nconst icons = {\n  label: LabelIcon,\n  layers: LayersIcon,\n  menu: MenuIcon,\n  theme: ThemeIcon,\n  export: ExportIcon\n};\n\n/**\n * Icon button component\n * @param {Function} onToggle Handle toggling theme between light/dark\n * @param {string} theme Kedro UI light/dark theme\n */\nconst IconButton = ({\n  ariaLabel,\n  ariaLive,\n  className,\n  disabled,\n  icon,\n  labelText,\n  onClick,\n  visible\n}) => {\n  const Icon = icons[icon];\n\n  return visible ? (\n    <li>\n      <button\n        aria-label={ariaLabel}\n        aria-live={ariaLive}\n        className={classnames('pipeline-icon-toolbar__button', className)}\n        disabled={disabled}\n        onClick={onClick}>\n        <span className=\"pipeline-icon-toolbar__label\">{labelText}</span>\n        <Icon className=\"pipeline-icon\" />\n      </button>\n    </li>\n  ) : null;\n};\n\nIconButton.propTypes = {\n  ariaLabel: PropTypes.string,\n  ariaLive: PropTypes.string,\n  disabled: PropTypes.bool,\n  icon: PropTypes.string,\n  labelText: PropTypes.string,\n  onClick: PropTypes.func,\n  visible: PropTypes.bool\n};\n\nIconButton.defaultProps = {\n  ariaLabel: null,\n  ariaLive: null,\n  disabled: false,\n  icon: 'label',\n  labelText: null,\n  onClick: null,\n  visible: true\n};\n\nexport default IconButton;\n","import React from 'react';\n\nexport default ({ className }) => (\n  <svg className={className} viewBox=\"0 0 22 20\">\n    <path d=\"M22 0v20H7.3L0 10 7.3 0H22zm-6.2 5h-3.6L10 15h2l.3-1.8h3.4L16 15H18L15.8 5zm-1.5 1.7l1 4.7h-2.6l1-4.7h.6z\" />\n  </svg>\n);\n","import React from 'react';\n\nexport default ({ className }) => (\n  <svg\n    className={className}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\">\n    <path d=\"M9.97 0l10.09 5-5.04 2.5 5.04 2.5-5.04 2.5 5.04 2.5L10 20 0 15l5-2.5L0 10l5.02-2.5L0 5zM7.23 13.61L4.47 15 10 17.77 15.56 15l-2.79-1.38L10 15zm5.56-4.98L9.99 10 7.26 8.63l-2.77 1.38 3.56 1.77 1.96.95 2.1-1L15.57 10zm-2.82-6.4L4.47 5 10 7.77 15.56 5z\" />\n  </svg>\n);\n","import React from 'react';\n\nexport default ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M15.3 3.3l1.4 1.4L9.4 12l7.3 7.3-1.4 1.4L6.6 12z\" />\n  </svg>\n);\n","import React from 'react';\n\nexport default ({ className }) => (\n  <svg className={className} viewBox=\"0 0 20 20\">\n    <path d=\"M10 0a10 10 0 1 1 0 20 10 10 0 0 1 0-20zm0 2v16a8 8 0 1 0 0-16z\" />\n  </svg>\n);\n","import React from 'react';\n\nexport default ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M5 16v4h14v-4h2v4c0 1-.8 2-1.9 2H5a2 2 0 01-2-2v-4h2zm8-14v11l3.5-3.5L18 11l-6 6-6-6 1.5-1.5L11 13V2h2z\" />\n  </svg>\n);\n","import React from 'react';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport {\n  toggleExportModal,\n  toggleLayers,\n  toggleSidebar,\n  toggleTextLabels,\n  toggleTheme\n} from '../../actions';\nimport IconButton from './icon-button';\nimport './icon-toolbar.css';\n\n/**\n * Main contols for filtering the chart data\n * @param {Function} onToggleTheme Handle toggling theme between light/dark\n * @param {Function} onToggleTextLabels Handle toggling text labels on/off\n * @param {Boolean} textLabels Whether text labels are displayed\n * @param {string} theme Kedro UI light/dark theme\n */\nexport const IconToolbar = ({\n  disableLayerBtn,\n  onToggleExportModal,\n  onToggleLayers,\n  onToggleSidebar,\n  onToggleTextLabels,\n  onToggleTheme,\n  textLabels,\n  theme,\n  visible\n}) => (\n  <>\n    <ul className=\"pipeline-icon-toolbar kedro\">\n      <IconButton\n        ariaLabel={`${visible.sidebar ? 'Hide' : 'Show'} menu`}\n        className={classnames('pipeline-menu-button', {\n          'pipeline-menu-button--inverse': !visible.sidebar\n        })}\n        onClick={() => onToggleSidebar(!visible.sidebar)}\n        icon=\"menu\"\n        labelText={`${visible.sidebar ? 'Hide' : 'Show'} menu`}\n      />\n      <IconButton\n        ariaLive=\"polite\"\n        ariaLabel={`Change to ${theme === 'light' ? 'dark' : 'light'} theme`}\n        onClick={() => onToggleTheme(theme === 'light' ? 'dark' : 'light')}\n        icon=\"theme\"\n        labelText=\"Toggle theme\"\n        visible={visible.themeBtn}\n      />\n      <IconButton\n        ariaLive=\"polite\"\n        onClick={() => onToggleTextLabels(!textLabels)}\n        icon=\"label\"\n        labelText={`${textLabels ? 'Hide' : 'Show'} text labels`}\n        visible={visible.labelBtn}\n      />\n      <IconButton\n        ariaLabel=\"Export graph as SVG or PNG\"\n        onClick={() => onToggleExportModal(true)}\n        icon=\"export\"\n        labelText=\"Export visualisation\"\n        visible={visible.exportBtn}\n      />\n      <IconButton\n        ariaLabel={`Turn data layers ${visible.layers ? 'off' : 'on'}`}\n        onClick={() => onToggleLayers(!visible.layers)}\n        icon=\"layers\"\n        labelText={`${visible.layers ? 'Hide' : 'Show'} layers`}\n        disabled={disableLayerBtn}\n        visible={visible.layerBtn}\n      />\n    </ul>\n  </>\n);\n\nexport const mapStateToProps = state => ({\n  disableLayerBtn: !state.layer.ids.length,\n  textLabels: state.textLabels,\n  theme: state.theme,\n  visible: state.visible\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  onToggleExportModal: value => {\n    dispatch(toggleExportModal(value));\n  },\n  onToggleLayers: value => {\n    dispatch(toggleLayers(Boolean(value)));\n  },\n  onToggleSidebar: visible => {\n    dispatch(toggleSidebar(visible));\n  },\n  onToggleTextLabels: value => {\n    dispatch(toggleTextLabels(Boolean(value)));\n  },\n  onToggleTheme: value => {\n    dispatch(toggleTheme(value));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(IconToolbar);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport TagList from '../tag-list';\nimport NodeList from '../node-list';\nimport IconToolbar from '../icon-toolbar';\nimport './sidebar.css';\n\n/**\n * Main app container. Handles showing/hiding the sidebar nav, and theme classes.\n * @param {Object} props visible\n */\nexport const Sidebar = ({ visible }) => (\n  <>\n    <div\n      className={classnames('pipeline-sidebar', {\n        'pipeline-sidebar--visible': visible\n      })}>\n      <div className=\"pipeline-ui\">\n        <TagList />\n        <NodeList />\n      </div>\n      <IconToolbar />\n    </div>\n  </>\n);\n\nconst mapStateToProps = state => ({\n  visible: state.visible.sidebar\n});\n\nexport default connect(mapStateToProps)(Sidebar);\n","const { default: downloadSvg, downloadPng } =\n  typeof window !== 'undefined' && require('svg-crowbar');\n\n/**\n * Handle onClick for the SVG/PNG download button\n * @param {string} format Must be 'svg' or 'png'\n * @param {string} theme light/dark theme\n * @param {Object} graphSize Graph width/height/margin\n * @param {function} mockFn Mock testing function stand-in for svg-crowbar\n * @return {Function} onClick handler\n */\nconst exportGraph = ({ format, theme, graphSize, mockFn }) => {\n  const downloadFormats = {\n    png: downloadPng,\n    svg: downloadSvg\n  };\n  const download = mockFn || downloadFormats[format];\n\n  // Create clone of graph SVG to avoid breaking the original\n  const svg = document.querySelector('#pipeline-graph');\n  const clone = svg.parentNode.appendChild(svg.cloneNode(true));\n  clone.classList.add('kedro', `kui-theme--${theme}`, 'pipeline-graph--export');\n\n  // Reset zoom/translate\n  let width = graphSize.width + graphSize.marginx * 2;\n  let height = graphSize.height + graphSize.marginy * 2;\n  clone.setAttribute('viewBox', `0 0 ${width} ${height}`);\n  clone.querySelector('#zoom-wrapper').removeAttribute('transform');\n\n  // Impose a maximum size on PNGs because otherwise they break when downloading\n  if (format === 'png') {\n    const maxWidth = 5000;\n    width = Math.min(width, maxWidth);\n    height = Math.min(height, maxWidth * (height / width));\n  }\n  clone.setAttribute('width', width);\n  clone.setAttribute('height', height);\n\n  const style = document.createElement('style');\n  if (format === 'svg') {\n    // Add webfont\n    style.innerHTML =\n      '@import url(https://fonts.googleapis.com/css?family=Titillium+Web:400);';\n  } else {\n    // Add websafe fallback font\n    style.innerHTML = `.kedro {\n      font-family: \"Trebuchet MS\", \"Lucida Grande\", \"Lucida Sans Unicode\", \"Lucida Sans\", Tahoma, sans-serif;\n      letter-spacing: -0.4px;\n    }`;\n  }\n  clone.prepend(style);\n\n  // Download SVG/PNG\n  download(clone, 'kedro-pipeline', { css: 'internal' });\n\n  // Delete cloned SVG\n  svg.parentNode.removeChild(clone);\n};\n\nexport default exportGraph;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Modal from '@quantumblack/kedro-ui/lib/components/modal';\nimport Button from '@quantumblack/kedro-ui/lib/components/button';\nimport { toggleExportModal } from '../../actions';\nimport { getGraphSize } from '../../selectors/layout';\nimport exportGraph from './export-graph';\nimport './export-modal.css';\n\n/**\n * Kedro-UI modal to allow users to choose between SVG/PNG export formats\n */\nconst ExportModal = ({ graphSize, theme, onToggle, visible }) => {\n  if (!visible.exportBtn) {\n    return null;\n  }\n  return (\n    <Modal\n      title=\"Export pipeline visualisation\"\n      onClose={() => onToggle(false)}\n      theme={theme}\n      visible={visible.exportModal}>\n      <div className=\"pipeline-icon-modal\">\n        <Button\n          theme={theme}\n          onClick={() => {\n            exportGraph({ format: 'png', theme, graphSize });\n            onToggle(false);\n          }}>\n          Download PNG\n        </Button>\n        <Button\n          theme={theme}\n          onClick={() => {\n            exportGraph({ format: 'svg', theme, graphSize });\n            onToggle(false);\n          }}>\n          Download SVG\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport const mapStateToProps = state => ({\n  graphSize: getGraphSize(state),\n  visible: state.visible,\n  theme: state.theme\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  onToggle: value => {\n    dispatch(toggleExportModal(value));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExportModal);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport FlowChart from '../flowchart';\nimport Sidebar from '../sidebar';\nimport ExportModal from '../export-modal';\nimport './wrapper.css';\n\n/**\n * Main app container. Handles showing/hiding the sidebar nav, and theme classes.\n */\nexport const Wrapper = ({ fontLoaded, theme }) => (\n  <div\n    className={classnames('kedro-pipeline', {\n      'kui-theme--dark': theme === 'dark',\n      'kui-theme--light': theme === 'light'\n    })}>\n    <Sidebar />\n    <div className=\"pipeline-wrapper\">{fontLoaded && <FlowChart />}</div>\n    <ExportModal />\n  </div>\n);\n\nexport const mapStateToProps = state => ({\n  fontLoaded: state.fontLoaded,\n  theme: state.theme\n});\n\nexport default connect(mapStateToProps)(Wrapper);\n","import { getInitialPipelineState } from '../store/initial-state';\n/**\n * Check whether data is in expected format\n * @param {Object} data - The parsed data input\n * @return {Boolean} True if valid for formatting\n */\nconst validateInput = data => {\n  const { isArray } = Array;\n  return (\n    data && isArray(data.edges) && isArray(data.nodes) && isArray(data.tags)\n  );\n};\n\n/**\n * Get unique, reproducible ID for each edge, based on its nodes\n * @param {Object} source - Name and type of the source node\n * @param {Object} target - Name and type of the target node\n */\nconst getEdgeID = (source, target) => [source, target].join('|');\n\n/**\n * Add a new node if it doesn't already exist\n * @param {string} name - Default node name\n * @param {string} type - 'data' or 'task'\n * @param {Array} tags - List of associated tags\n */\nconst addNode = state => node => {\n  const { id } = node;\n  if (state.node.name[id]) {\n    return;\n  }\n  state.node.ids.push(id);\n  state.node.name[id] = node.name;\n  state.node.fullName[id] = node.full_name || node.name;\n  state.node.type[id] = node.type;\n  state.node.layer[id] = node.layer;\n  state.node.isParam[id] = node.type === 'parameters';\n  state.node.tags[id] = node.tags || [];\n};\n\n/**\n * Create a new link between two nodes and add it to the edges array\n * @param {Object} source - Parent node\n * @param {Object} target - Child node\n */\nconst addEdge = state => ({ source, target }) => {\n  const id = getEdgeID(source, target);\n  if (state.edge.ids.includes(id)) {\n    return;\n  }\n  state.edge.ids.push(id);\n  state.edge.sources[id] = source;\n  state.edge.targets[id] = target;\n};\n\n/**\n * Add a new Tag if it doesn't already exist\n * @param {Object} tag - Tag object\n */\nconst addTag = state => tag => {\n  const { id } = tag;\n  state.tag.ids.push(id);\n  state.tag.name[id] = tag.name;\n};\n\n/**\n * Add a new Layer if it doesn't already exist\n * @param {Object} layer - Layer object\n */\nconst addLayer = state => layer => {\n  // using layer name as both layerId and name.\n  // It futureproofs it if we need a separate layer ID in the future.\n  state.layer.ids.push(layer);\n  state.layer.name[layer] = layer;\n};\n\n/**\n * Convert the pipeline data into a normalised state object\n * @param {Object} data Raw unformatted data input\n * @return {Object} Formatted, normalized state\n */\nconst formatData = data => {\n  const state = getInitialPipelineState();\n\n  if (validateInput(data)) {\n    if (data.schema_id) {\n      state.id = data.schema_id;\n    }\n    data.nodes.forEach(addNode(state));\n    data.edges.forEach(addEdge(state));\n    if (data.tags) {\n      data.tags.forEach(addTag(state));\n    }\n    if (data.layers) {\n      data.layers.forEach(addLayer(state));\n    }\n  }\n\n  return state;\n};\n\nexport default formatData;\n","export default {\n  schema_id: '310750827599783',\n  tags: [\n    {\n      id: 'Nulla',\n      name: 'Nulla'\n    },\n    {\n      id: 'pulvinar',\n      name: 'pulvinar'\n    },\n    {\n      id: 'volutpat',\n      name: 'volutpat'\n    },\n    {\n      id: 'enim',\n      name: 'enim'\n    },\n    {\n      id: 'consectetur',\n      name: 'consectetur'\n    }\n  ],\n  edges: [\n    {\n      target: 'task/consectetur',\n      source: 'data/Lorem'\n    },\n    {\n      target: 'task/consectetur',\n      source: 'data/ipsum'\n    },\n    {\n      target: 'task/consectetur',\n      source: 'data/dolor'\n    },\n    {\n      target: 'task/consectetur',\n      source: 'data/sit'\n    },\n    {\n      target: 'task/consectetur',\n      source: 'data/amet'\n    },\n    {\n      target: 'data/Aliquam',\n      source: 'task/consectetur'\n    },\n    {\n      target: 'data/eu',\n      source: 'task/consectetur'\n    },\n    {\n      target: 'data/accumsan',\n      source: 'task/consectetur'\n    },\n    {\n      target: 'data/mauris',\n      source: 'task/consectetur'\n    }\n  ],\n  nodes: [\n    {\n      tags: ['Nulla', 'pulvinar', 'enim', 'consectetur', 'volutpat'],\n      id: 'task/consectetur',\n      type: 'task',\n      full_name: 'consectetur',\n      name: 'consectetur'\n    },\n    {\n      tags: ['Nulla', 'pulvinar', 'volutpat', 'enim', 'consectetur'],\n      id: 'data/mauris',\n      type: 'data',\n      full_name: 'mauris',\n      name: 'mauris'\n    },\n    {\n      tags: ['Nulla', 'pulvinar', 'volutpat', 'enim', 'consectetur'],\n      id: 'data/Lorem',\n      type: 'data',\n      full_name: 'Lorem',\n      name: 'Lorem'\n    },\n    {\n      tags: ['Nulla', 'pulvinar', 'volutpat', 'enim', 'consectetur'],\n      id: 'data/dolor',\n      type: 'data',\n      full_name: 'dolor',\n      name: 'dolor'\n    },\n    {\n      tags: ['Nulla', 'pulvinar', 'volutpat', 'enim', 'consectetur'],\n      id: 'data/eu',\n      type: 'data',\n      full_name: 'eu',\n      name: 'eu'\n    },\n    {\n      tags: ['Nulla', 'pulvinar', 'volutpat', 'enim', 'consectetur'],\n      id: 'data/accumsan',\n      type: 'data',\n      full_name: 'accumsan',\n      name: 'accumsan'\n    },\n    {\n      tags: ['Nulla', 'pulvinar', 'volutpat', 'enim', 'consectetur'],\n      id: 'data/ipsum',\n      type: 'data',\n      full_name: 'ipsum',\n      name: 'ipsum'\n    },\n    {\n      tags: ['Nulla', 'pulvinar', 'volutpat', 'enim', 'consectetur'],\n      id: 'data/sit',\n      type: 'data',\n      full_name: 'sit',\n      name: 'sit'\n    },\n    {\n      tags: ['Nulla', 'pulvinar', 'volutpat', 'enim', 'consectetur'],\n      id: 'data/Aliquam',\n      type: 'data',\n      full_name: 'Aliquam',\n      name: 'Aliquam'\n    },\n    {\n      tags: ['Nulla', 'pulvinar', 'volutpat', 'enim', 'consectetur'],\n      id: 'data/amet',\n      type: 'data',\n      full_name: 'amet',\n      name: 'amet'\n    }\n  ]\n};\n","export default {\n  schema_id: '09876543210987654321',\n  tags: [\n    {\n      id: 'small',\n      name: 'small'\n    },\n    {\n      id: 'medium',\n      name: 'medium'\n    },\n    {\n      id: 'huge',\n      name: 'huge'\n    }\n  ],\n  nodes: [\n    {\n      id: 'task/salmon',\n      name: 'salmon',\n      full_name: 'salmon',\n      tags: ['small'],\n      type: 'task'\n    },\n    {\n      id: 'task/shark',\n      name: 'shark',\n      full_name: 'shark',\n      tags: ['medium', 'huge'],\n      type: 'task'\n    },\n    {\n      id: 'task/trout',\n      name: 'trout',\n      full_name: 'trout',\n      tags: ['small'],\n      type: 'task'\n    },\n    {\n      id: 'data/whale',\n      name: 'whale',\n      full_name: 'whale',\n      tags: ['huge'],\n      type: 'data'\n    },\n    {\n      id: 'data/dog',\n      name: 'dog',\n      full_name: 'dog',\n      tags: ['small', 'medium'],\n      type: 'data'\n    },\n    {\n      id: 'data/cat',\n      name: 'cat',\n      full_name: 'cat',\n      tags: ['small', 'medium', 'huge'],\n      type: 'data'\n    },\n    {\n      id: 'data/parameters_rabbit',\n      name: 'parameters_rabbit',\n      full_name: 'parameters_rabbit',\n      tags: ['small'],\n      type: 'parameters'\n    },\n    {\n      id: 'data/parameters',\n      name: 'parameters',\n      full_name: 'parameters',\n      tags: [],\n      type: 'parameters'\n    },\n    {\n      id: 'data/sheep',\n      name: 'sheep',\n      full_name: 'sheep',\n      tags: ['medium'],\n      type: 'data'\n    },\n    {\n      id: 'data/horse',\n      name: 'horse',\n      full_name: 'horse',\n      tags: ['huge'],\n      type: 'data'\n    },\n    {\n      id: 'data/weasel',\n      name: 'weasel',\n      full_name: 'weasel',\n      tags: ['small'],\n      type: 'data'\n    },\n    {\n      id: 'data/elephant',\n      name: 'elephant',\n      full_name: 'elephant',\n      tags: ['huge'],\n      type: 'data'\n    },\n    {\n      id: 'data/bear',\n      name: 'bear',\n      full_name: 'bear',\n      tags: ['huge'],\n      type: 'data'\n    },\n    {\n      id: 'data/giraffe',\n      name: 'giraffe',\n      full_name: 'giraffe',\n      tags: ['huge'],\n      type: 'data'\n    },\n    {\n      id: 'data/pig',\n      name: 'pig',\n      full_name: 'pig',\n      tags: ['medium'],\n      type: 'data'\n    }\n  ],\n  edges: [\n    {\n      target: 'task/salmon',\n      source: 'data/cat'\n    },\n    {\n      target: 'task/salmon',\n      source: 'data/dog'\n    },\n    {\n      target: 'task/salmon',\n      source: 'data/parameters'\n    },\n    {\n      target: 'task/salmon',\n      source: 'data/parameters_rabbit'\n    },\n    {\n      target: 'data/pig',\n      source: 'task/salmon'\n    },\n    {\n      target: 'data/horse',\n      source: 'task/salmon'\n    },\n    {\n      target: 'data/sheep',\n      source: 'task/salmon'\n    },\n    {\n      target: 'task/shark',\n      source: 'data/cat'\n    },\n    {\n      target: 'task/shark',\n      source: 'data/weasel'\n    },\n    {\n      target: 'task/shark',\n      source: 'data/elephant'\n    },\n    {\n      target: 'task/shark',\n      source: 'data/bear'\n    },\n    {\n      target: 'data/sheep',\n      source: 'task/shark'\n    },\n    {\n      target: 'data/pig',\n      source: 'task/shark'\n    },\n    {\n      target: 'data/giraffe',\n      source: 'task/shark'\n    },\n    {\n      target: 'task/trout',\n      source: 'data/pig'\n    },\n    {\n      target: 'data/whale',\n      source: 'task/trout'\n    }\n  ]\n};\n","export default {\n  schema_id: '12345678901234567890',\n  edges: [\n    {\n      source: '33920f3a',\n      target: '06c33e94'\n    },\n    {\n      source: '06c33e94',\n      target: '105160a0'\n    },\n    {\n      source: '814ef273',\n      target: '0b7e1ac6'\n    },\n    {\n      source: '0b7e1ac6',\n      target: '389b5286'\n    },\n    {\n      source: '58450007',\n      target: '22ea294c'\n    },\n    {\n      source: '22ea294c',\n      target: 'bcb40508'\n    },\n    {\n      source: '105160a0',\n      target: 'f1a163c4'\n    },\n    {\n      source: 'f1a163c4',\n      target: 'e44a096d'\n    },\n    {\n      source: '389b5286',\n      target: 'b2f97396'\n    },\n    {\n      source: 'b2f97396',\n      target: '8c1dcc36'\n    },\n    {\n      source: 'bcb40508',\n      target: '27bb9dc7'\n    },\n    {\n      source: '27bb9dc7',\n      target: '13a964bf'\n    },\n    {\n      source: '842a3580',\n      target: 'fb5bd01d'\n    },\n    {\n      source: 'e44a096d',\n      target: 'fb5bd01d'\n    },\n    {\n      source: '8c1dcc36',\n      target: 'fb5bd01d'\n    },\n    {\n      source: '13a964bf',\n      target: 'fb5bd01d'\n    },\n    {\n      source: 'fb5bd01d',\n      target: '55bd1af4'\n    },\n    {\n      source: '842a3580',\n      target: 'd52422da'\n    },\n    {\n      source: 'e44a096d',\n      target: 'd52422da'\n    },\n    {\n      source: '8c1dcc36',\n      target: 'd52422da'\n    },\n    {\n      source: '13a964bf',\n      target: 'd52422da'\n    },\n    {\n      source: 'd52422da',\n      target: '442c2c34'\n    },\n    {\n      source: '181c2b7c',\n      target: 'dcbb9652'\n    },\n    {\n      source: '057ade39',\n      target: 'dcbb9652'\n    },\n    {\n      source: 'dcbb9652',\n      target: '7eb64be0'\n    },\n    {\n      source: '181c2b7c',\n      target: 'c4cff5d0'\n    },\n    {\n      source: '42e79d42',\n      target: 'c4cff5d0'\n    },\n    {\n      source: 'c4cff5d0',\n      target: '842a3580'\n    },\n    {\n      source: '7eb64be0',\n      target: '95cfc42d'\n    },\n    {\n      source: '1b3afcba',\n      target: '95cfc42d'\n    },\n    {\n      source: '55bd1af4',\n      target: '95cfc42d'\n    },\n    {\n      source: '95cfc42d',\n      target: '8770a38e'\n    },\n    {\n      source: '95cfc42d',\n      target: '1dafa5fb'\n    },\n    {\n      source: '442c2c34',\n      target: 'ccbee9c5'\n    },\n    {\n      source: '3a60b3a4',\n      target: 'ccbee9c5'\n    },\n    {\n      source: 'ccbee9c5',\n      target: 'fb4f64bd'\n    },\n    {\n      source: 'ccbee9c5',\n      target: 'f4f3a276'\n    },\n    {\n      source: '1dafa5fb',\n      target: '394244dd'\n    },\n    {\n      source: '55bd1af4',\n      target: '394244dd'\n    },\n    {\n      source: '394244dd',\n      target: '792a14f6'\n    },\n    {\n      source: 'f4f3a276',\n      target: '67257e84'\n    },\n    {\n      source: '442c2c34',\n      target: '67257e84'\n    },\n    {\n      source: '67257e84',\n      target: '9bd2dc3d'\n    },\n    {\n      source: '1dafa5fb',\n      target: 'f6f50e64'\n    },\n    {\n      source: 'dff067eb',\n      target: 'f6f50e64'\n    },\n    {\n      source: '55bd1af4',\n      target: 'f6f50e64'\n    },\n    {\n      source: 'f6f50e64',\n      target: '92f58611'\n    },\n    {\n      source: 'dff067eb',\n      target: 'e061482b'\n    },\n    {\n      source: 'f4f3a276',\n      target: 'e061482b'\n    },\n    {\n      source: '442c2c34',\n      target: 'e061482b'\n    },\n    {\n      source: 'e061482b',\n      target: 'b2a3a8e5'\n    },\n    {\n      source: '792a14f6',\n      target: '53b05b01'\n    },\n    {\n      source: '8770a38e',\n      target: '53b05b01'\n    },\n    {\n      source: 'fb4f64bd',\n      target: '6d8d326d'\n    },\n    {\n      source: '9bd2dc3d',\n      target: '6d8d326d'\n    },\n    {\n      source: 'dff067eb',\n      target: '45bda5fd'\n    },\n    {\n      source: '9aeb6881',\n      target: '45bda5fd'\n    },\n    {\n      source: '92f58611',\n      target: '45bda5fd'\n    },\n    {\n      source: '45bda5fd',\n      target: '90713d4f'\n    },\n    {\n      source: 'dff067eb',\n      target: '211c92c3'\n    },\n    {\n      source: '92f58611',\n      target: '211c92c3'\n    },\n    {\n      source: '211c92c3',\n      target: '4704ff18'\n    },\n    {\n      source: 'dff067eb',\n      target: 'c17b9614'\n    },\n    {\n      source: '4704ff18',\n      target: 'c17b9614'\n    },\n    {\n      source: 'c17b9614',\n      target: 'ccd3d45b'\n    },\n    {\n      source: '90713d4f',\n      target: '90461ea7'\n    },\n    {\n      source: 'ccd3d45b',\n      target: '90461ea7'\n    },\n    {\n      source: '9bd2dc3d',\n      target: '90461ea7'\n    },\n    {\n      source: '792a14f6',\n      target: '90461ea7'\n    },\n    {\n      source: '4704ff18',\n      target: '90461ea7'\n    },\n    {\n      source: '90461ea7',\n      target: '3e3b263a'\n    },\n    {\n      source: '90461ea7',\n      target: 'f3e15708'\n    },\n    {\n      source: '90461ea7',\n      target: '83ebce11'\n    },\n    {\n      source: '90461ea7',\n      target: 'a72d7024'\n    },\n    {\n      source: '90461ea7',\n      target: '8dbed427'\n    }\n  ],\n  nodes: [\n    {\n      full_name: 'load_raw_interaction_data',\n      id: '06c33e94',\n      name: 'Load Raw Interaction Data',\n      tags: ['data_engineering', 'preprocessing'],\n      type: 'task'\n    },\n    {\n      full_name: 'load_raw_country_data',\n      id: '0b7e1ac6',\n      name: 'Load Raw Country Data',\n      tags: ['data_engineering', 'preprocessing'],\n      type: 'task'\n    },\n    {\n      full_name: 'load_raw_shopper_spend_data',\n      id: '22ea294c',\n      name: 'Load Raw Shopper Spend Data',\n      tags: ['data_engineering', 'preprocessing'],\n      type: 'task'\n    },\n    {\n      full_name: 'preprocess_primary_interaction_data',\n      id: 'f1a163c4',\n      name: 'Preprocess Primary Interaction Data',\n      tags: ['data_engineering', 'preprocessing'],\n      type: 'task'\n    },\n    {\n      full_name: 'preprocess_primary_country_data',\n      id: 'b2f97396',\n      name: 'Preprocess Primary Country Data',\n      tags: ['data_engineering', 'preprocessing'],\n      type: 'task'\n    },\n    {\n      full_name: 'preprocess_primary_shopper_spend_data',\n      id: '27bb9dc7',\n      name: 'Preprocess Primary Shopper Spend Data',\n      tags: ['data_engineering', 'preprocessing'],\n      type: 'task'\n    },\n    {\n      full_name: 'create_shopper_spend_features',\n      id: 'fb5bd01d',\n      name: 'Create Shopper Spend Features',\n      tags: ['feature_engineering', 'data_engineering'],\n      type: 'task'\n    },\n    {\n      full_name: 'create_shopper_churn_features',\n      id: 'd52422da',\n      name: 'Create Shopper Churn Features',\n      tags: ['feature_engineering', 'data_engineering'],\n      type: 'task'\n    },\n    {\n      full_name: 'prepare_vendor_input',\n      id: 'dcbb9652',\n      name: 'Prepare Vendor Input',\n      tags: ['feature_engineering', 'data_engineering'],\n      type: 'task'\n    },\n    {\n      full_name: 'prepare_crm_input',\n      id: 'c4cff5d0',\n      name: 'Prepare CRM Input',\n      tags: ['feature_engineering', 'data_engineering'],\n      type: 'task'\n    },\n    {\n      full_name: 'predictive_sales_model',\n      id: '95cfc42d',\n      name: 'Predictive Sales Model',\n      tags: ['model_training', 'data_science'],\n      type: 'task'\n    },\n    {\n      full_name: 'predictive_engagement_model',\n      id: 'ccbee9c5',\n      name: 'Predictive Engagement Model',\n      tags: ['model_training', 'data_science'],\n      type: 'task'\n    },\n    {\n      full_name: 'sales_model_explainable_ai',\n      id: '394244dd',\n      name: 'Sales Model Explainable AI',\n      tags: ['model_explaination', 'data_science'],\n      type: 'task'\n    },\n    {\n      full_name: 'engagement_model_explainable_ai',\n      id: '67257e84',\n      name: 'Engagement Model Explainable AI',\n      tags: ['model_explaination', 'data_science'],\n      type: 'task'\n    },\n    {\n      full_name: 'perform_digital_analysis',\n      id: 'f6f50e64',\n      name: 'Perform Digital Analysis',\n      tags: ['model_training', 'data_science'],\n      type: 'task'\n    },\n    {\n      full_name: 'engagement_recommendation_engine',\n      id: 'e061482b',\n      name: 'Engagement Recommendation Engine',\n      tags: ['model_training', 'data_science'],\n      type: 'task'\n    },\n    {\n      full_name: 'sales_model_performance_monitoring',\n      id: '53b05b01',\n      name: 'Sales Model Performance Monitoring',\n      tags: ['model_performance_monitoring', 'data_science'],\n      type: 'task'\n    },\n    {\n      full_name: 'engagement_model_performance_monitoring',\n      id: '6d8d326d',\n      name: 'Engagement Model Performance Monitoring',\n      tags: ['model_performance_monitoring', 'data_science'],\n      type: 'task'\n    },\n    {\n      full_name: 'multi-channel_optimisation',\n      id: '45bda5fd',\n      name: 'Multi-Channel Optimisation',\n      tags: ['optimisation', 'data_science'],\n      type: 'task'\n    },\n    {\n      full_name: 'content_optimisation',\n      id: '211c92c3',\n      name: 'Content Optimisation',\n      tags: ['optimisation', 'data_science'],\n      type: 'task'\n    },\n    {\n      full_name: 'segment_journeys',\n      id: 'c17b9614',\n      name: 'Segment Journeys',\n      tags: ['optimisation', 'data_science'],\n      type: 'task'\n    },\n    {\n      full_name: 'generate_dashboard_inputs',\n      id: '90461ea7',\n      name: 'Generate Dashboard Inputs',\n      tags: ['reporting', 'data_science'],\n      type: 'task'\n    },\n    {\n      full_name: 'interaction_raw',\n      id: '33920f3a',\n      name: 'Interaction Raw',\n      tags: ['data_engineering', 'preprocessing'],\n      type: 'data'\n    },\n    {\n      full_name: 'interaction_primary',\n      id: '105160a0',\n      name: 'Interaction Primary',\n      tags: ['data_engineering', 'preprocessing'],\n      type: 'data'\n    },\n    {\n      full_name: 'country_raw',\n      id: '814ef273',\n      name: 'Country Raw',\n      tags: ['data_engineering', 'preprocessing'],\n      type: 'data'\n    },\n    {\n      full_name: 'country_primary',\n      id: '389b5286',\n      name: 'Country Primary',\n      tags: ['data_engineering', 'preprocessing'],\n      type: 'data'\n    },\n    {\n      full_name: 'shopper_spend_raw',\n      id: '58450007',\n      name: 'Shopper Spend Raw',\n      tags: ['data_engineering', 'preprocessing'],\n      type: 'data'\n    },\n    {\n      full_name: 'shopper_spend_primary',\n      id: 'bcb40508',\n      name: 'Shopper Spend Primary',\n      tags: ['data_engineering', 'preprocessing'],\n      type: 'data'\n    },\n    {\n      full_name: 'interaction_intermediate',\n      id: 'e44a096d',\n      name: 'Interaction Intermediate',\n      tags: ['feature_engineering', 'data_engineering', 'preprocessing'],\n      type: 'data'\n    },\n    {\n      full_name: 'country_intermediate',\n      id: '8c1dcc36',\n      name: 'Country Intermediate',\n      tags: ['feature_engineering', 'data_engineering', 'preprocessing'],\n      type: 'data'\n    },\n    {\n      full_name: 'shopper_spend_intermediate',\n      id: '13a964bf',\n      name: 'Shopper Spend Intermediate',\n      tags: ['feature_engineering', 'data_engineering', 'preprocessing'],\n      type: 'data'\n    },\n    {\n      full_name: 'crm_predictions',\n      id: '842a3580',\n      name: 'CRM Predictions',\n      tags: ['feature_engineering', 'data_engineering'],\n      type: 'data'\n    },\n    {\n      full_name: 'shopper_spend_features',\n      id: '55bd1af4',\n      name: 'Shopper Spend Features',\n      tags: [\n        'data_science',\n        'model_training',\n        'model_explaination',\n        'feature_engineering',\n        'data_engineering'\n      ],\n      type: 'data'\n    },\n    {\n      full_name: 'shopper_churn_features',\n      id: '442c2c34',\n      name: 'Shopper Churn Features',\n      tags: [\n        'data_science',\n        'model_training',\n        'model_explaination',\n        'feature_engineering',\n        'data_engineering'\n      ],\n      type: 'data'\n    },\n    {\n      full_name: 'vendor_master',\n      id: '181c2b7c',\n      name: 'Vendor Master',\n      tags: ['feature_engineering', 'data_engineering'],\n      type: 'data'\n    },\n    {\n      full_name: 'salesforce_crm',\n      id: '057ade39',\n      name: 'Salesforce CRM',\n      tags: ['feature_engineering', 'data_engineering'],\n      type: 'data'\n    },\n    {\n      full_name: 'vendor_predictions',\n      id: '7eb64be0',\n      name: 'Vendor Predictions',\n      tags: [\n        'feature_engineering',\n        'data_engineering',\n        'data_science',\n        'model_training'\n      ],\n      type: 'data'\n    },\n    {\n      full_name: 'salesforce_accounts',\n      id: '42e79d42',\n      name: 'Salesforce Accounts',\n      tags: ['feature_engineering', 'data_engineering'],\n      type: 'data'\n    },\n    {\n      full_name: 'params:_sales_model',\n      id: '1b3afcba',\n      name: 'params: Sales Model',\n      tags: ['data_science', 'model_training'],\n      type: 'parameters'\n    },\n    {\n      full_name: 'sales_validation_results',\n      id: '8770a38e',\n      name: 'Sales Validation Results',\n      tags: ['model_performance_monitoring', 'data_science', 'model_training'],\n      type: 'data'\n    },\n    {\n      full_name: 'sales_trained_model',\n      id: '1dafa5fb',\n      name: 'Sales Trained Model',\n      tags: ['model_explaination', 'data_science', 'model_training'],\n      type: 'data'\n    },\n    {\n      full_name: 'params:_engagement_model',\n      id: '3a60b3a4',\n      name: 'params: Engagement Model',\n      tags: ['data_science', 'model_training'],\n      type: 'parameters'\n    },\n    {\n      full_name: 'engagement_validation_results',\n      id: 'fb4f64bd',\n      name: 'Engagement Validation Results',\n      tags: ['model_performance_monitoring', 'data_science', 'model_training'],\n      type: 'data'\n    },\n    {\n      full_name: 'engagement_trained_model',\n      id: 'f4f3a276',\n      name: 'Engagement Trained Model',\n      tags: ['model_explaination', 'data_science', 'model_training'],\n      type: 'data'\n    },\n    {\n      full_name: 'sales_model_explanations',\n      id: '792a14f6',\n      name: 'Sales Model Explanations',\n      tags: [\n        'model_explaination',\n        'data_science',\n        'model_performance_monitoring',\n        'reporting'\n      ],\n      type: 'data'\n    },\n    {\n      full_name: 'engagement_model_explanations',\n      id: '9bd2dc3d',\n      name: 'Engagement Model Explanations',\n      tags: [\n        'model_explaination',\n        'data_science',\n        'model_performance_monitoring',\n        'reporting'\n      ],\n      type: 'data'\n    },\n    {\n      full_name: 'params:_optimisation',\n      id: 'dff067eb',\n      name: 'params: Optimisation',\n      tags: ['data_science', 'model_training', 'optimisation'],\n      type: 'parameters'\n    },\n    {\n      full_name: 'digital_analysis',\n      id: '92f58611',\n      name: 'Digital Analysis',\n      tags: ['data_science', 'model_training', 'optimisation'],\n      type: 'data'\n    },\n    {\n      full_name: 'engagement_recommendations',\n      id: 'b2a3a8e5',\n      name: 'Engagement Recommendations',\n      tags: ['data_science', 'model_training'],\n      type: 'data'\n    },\n    {\n      full_name: 'action_cost_table',\n      id: '9aeb6881',\n      name: 'Action Cost Table',\n      tags: ['data_science', 'optimisation'],\n      type: 'data'\n    },\n    {\n      full_name: 'multi-channel_resolutions',\n      id: '90713d4f',\n      name: 'Multi-Channel Resolutions',\n      tags: ['reporting', 'data_science', 'optimisation'],\n      type: 'data'\n    },\n    {\n      full_name: 'content_resolutions',\n      id: '4704ff18',\n      name: 'Content Resolutions',\n      tags: ['reporting', 'data_science', 'optimisation'],\n      type: 'data'\n    },\n    {\n      full_name: 'segment_journeys_allocations',\n      id: 'ccd3d45b',\n      name: 'Segment Journeys Allocations',\n      tags: ['reporting', 'data_science', 'optimisation'],\n      type: 'data'\n    },\n    {\n      full_name: 'upselling_readiness_dashboard_input',\n      id: '3e3b263a',\n      name: 'Upselling Readiness Dashboard Input',\n      tags: ['reporting', 'data_science'],\n      type: 'data'\n    },\n    {\n      full_name: 'lead_scoring_dashboard_input',\n      id: 'f3e15708',\n      name: 'Lead Scoring Dashboard Input',\n      tags: ['reporting', 'data_science'],\n      type: 'data'\n    },\n    {\n      full_name: 'lifetime_value_prediction_dashboard_input',\n      id: '83ebce11',\n      name: 'Lifetime Value Prediction Dashboard Input',\n      tags: ['reporting', 'data_science'],\n      type: 'data'\n    },\n    {\n      full_name: 'digital_sales_dashboard_input',\n      id: 'a72d7024',\n      name: 'Digital Sales Dashboard Input',\n      tags: ['reporting', 'data_science'],\n      type: 'data'\n    },\n    {\n      full_name: 'vendor_sales_dashboard_input',\n      id: '8dbed427',\n      name: 'Vendor Sales Dashboard Input',\n      tags: ['reporting', 'data_science'],\n      type: 'data'\n    }\n  ],\n  tags: [\n    {\n      id: 'model_performance_monitoring',\n      name: 'Model Performance Monitoring'\n    },\n    {\n      id: 'data_science',\n      name: 'Data Science'\n    },\n    {\n      id: 'reporting',\n      name: 'Reporting'\n    },\n    {\n      id: 'model_training',\n      name: 'Model Training'\n    },\n    {\n      id: 'preprocessing',\n      name: 'Preprocessing'\n    },\n    {\n      id: 'optimisation',\n      name: 'Optimisation'\n    },\n    {\n      id: 'model_explaination',\n      name: 'Model Explaination'\n    },\n    {\n      id: 'feature_engineering',\n      name: 'Feature Engineering'\n    },\n    {\n      id: 'data_engineering',\n      name: 'Data Engineering'\n    }\n  ]\n};\n","export default {\n  layers: [\n    'Raw',\n    'Intermediate',\n    'Primary',\n    'Feature',\n    'Model Input',\n    'Model Output'\n  ],\n  nodes: [\n    {\n      id: 'task/sed_viverra',\n      name: 'sed viverra',\n      full_name: 'sed viverra',\n      type: 'task',\n      layer: null,\n      tags: ['intermediate', 'pellentesque_ipsum_dolor_fermentum_pellentesque']\n    },\n    {\n      id: 'task/neque_sit_ac_elit_neque',\n      name: 'neque sit ac elit neque',\n      full_name: 'neque sit ac elit neque',\n      type: 'task',\n      layer: null,\n      tags: [\n        'model-input',\n        'adipiscing_dolor',\n        'pellentesque_ipsum_dolor_fermentum_pellentesque'\n      ]\n    },\n    {\n      id: 'task/finibus_amet_rhoncus_consectetur_vitae_libero_nulla',\n      name: 'finibus amet rhoncus consectetur vitae libero nulla',\n      full_name: 'finibus amet rhoncus consectetur vitae libero nulla',\n      type: 'task',\n      layer: null,\n      tags: ['raw', 'pellentesque_ipsum_dolor_fermentum_pellentesque']\n    },\n    {\n      id: 'task/vestibulum_consectetur_id',\n      name: 'vestibulum consectetur id',\n      full_name: 'vestibulum consectetur id',\n      type: 'task',\n      layer: null,\n      tags: ['feature', 'pellentesque_ipsum_dolor_fermentum_pellentesque']\n    },\n    {\n      id: 'task/vitae',\n      name: 'vitae',\n      full_name: 'vitae',\n      type: 'task',\n      layer: null,\n      tags: ['primary', 'pellentesque_ipsum_dolor_fermentum_pellentesque']\n    },\n    {\n      id: 'task/nulla_consequat_dignissim_elit_adipiscing_ac',\n      name: 'nulla consequat dignissim elit adipiscing ac',\n      full_name: 'nulla consequat dignissim elit adipiscing ac',\n      type: 'task',\n      layer: null,\n      tags: ['primary', 'pellentesque_ipsum_dolor_fermentum_pellentesque']\n    },\n    {\n      id: 'task/consequat',\n      name: 'consequat',\n      full_name: 'consequat',\n      type: 'task',\n      layer: null,\n      tags: [\n        'primary',\n        'pellentesque_ipsum_dolor_fermentum_pellentesque',\n        'adipiscing_dolor'\n      ]\n    },\n    {\n      id:\n        'task/finibus_neque_sit_fermentum_adipiscing_dignissim_viverra_pellentesque_quisque_ipsum',\n      name:\n        'finibus neque sit fermentum adipiscing dignissim viverra pellentesque quisque ipsum',\n      full_name:\n        'finibus neque sit fermentum adipiscing dignissim viverra pellentesque quisque ipsum',\n      type: 'task',\n      layer: null,\n      tags: [\n        'intermediate',\n        'pellentesque_ipsum_dolor_fermentum_pellentesque',\n        'adipiscing_dolor'\n      ]\n    },\n    {\n      id: 'task/pellentesque_amet_adipiscing_ac_libero_id_consectetur',\n      name: 'pellentesque amet adipiscing ac libero id consectetur',\n      full_name: 'pellentesque amet adipiscing ac libero id consectetur',\n      type: 'task',\n      layer: null,\n      tags: ['primary', 'adipiscing_dolor']\n    },\n    {\n      id: 'task/sit_pellentesque_amet_lorem',\n      name: 'sit pellentesque amet lorem',\n      full_name: 'sit pellentesque amet lorem',\n      type: 'task',\n      layer: null,\n      tags: [\n        'intermediate',\n        'pellentesque_ipsum_dolor_fermentum_pellentesque',\n        'adipiscing_dolor'\n      ]\n    },\n    {\n      id: 'data/diam_nulla_finibus_dignissim_viverra_viverra',\n      name: 'diam nulla finibus dignissim viverra viverra',\n      full_name: 'diam nulla finibus dignissim viverra viverra',\n      type: 'data',\n      layer: 'Raw',\n      tags: ['raw', 'pellentesque_ipsum_dolor_fermentum_pellentesque']\n    },\n    {\n      id: 'data/neque_amet_turpis_rhoncus_dolor_nunc_sit',\n      name: 'neque amet turpis rhoncus dolor nunc sit',\n      full_name: 'neque amet turpis rhoncus dolor nunc sit',\n      type: 'data',\n      layer: 'Model Input',\n      tags: ['model-input', 'pellentesque_ipsum_dolor_fermentum_pellentesque']\n    },\n    {\n      id: 'data/elit_adipiscing_fermentum_nunc_amet_consectetur_adipiscing',\n      name: 'elit adipiscing fermentum nunc amet consectetur adipiscing',\n      full_name: 'elit adipiscing fermentum nunc amet consectetur adipiscing',\n      type: 'data',\n      layer: 'Raw',\n      tags: [\n        'raw',\n        'adipiscing_dolor',\n        'pellentesque_ipsum_dolor_fermentum_pellentesque'\n      ]\n    },\n    {\n      id: 'data/parameters_convallis_amet_fermentum_sit_nulla_id_ac_diam',\n      name: 'parameters convallis amet fermentum sit nulla id ac diam',\n      full_name: 'parameters convallis amet fermentum sit nulla id ac diam',\n      type: 'parameters',\n      layer: 'Intermediate',\n      tags: ['intermediate', 'pellentesque_ipsum_dolor_fermentum_pellentesque']\n    },\n    {\n      id: 'data/condimentum_viverra_rhoncus_sit_amet_neque_diam_consequat',\n      name: 'condimentum viverra rhoncus sit amet neque diam consequat',\n      full_name: 'condimentum viverra rhoncus sit amet neque diam consequat',\n      type: 'data',\n      layer: 'Intermediate',\n      tags: ['intermediate', 'adipiscing_dolor']\n    },\n    {\n      id: 'data/parameters_libero',\n      name: 'parameters libero',\n      full_name: 'parameters libero',\n      type: 'parameters',\n      layer: 'Model Input',\n      tags: ['model-input', 'pellentesque_ipsum_dolor_fermentum_pellentesque']\n    },\n    {\n      id: 'data/amet_fermentum_fermentum_amet_sed',\n      name: 'amet fermentum fermentum amet sed',\n      full_name: 'amet fermentum fermentum amet sed',\n      type: 'data',\n      layer: 'Raw',\n      tags: [\n        'raw',\n        'adipiscing_dolor',\n        'pellentesque_ipsum_dolor_fermentum_pellentesque'\n      ]\n    },\n    {\n      id: 'data/parameters_nulla_rhoncus',\n      name: 'parameters nulla rhoncus',\n      full_name: 'parameters nulla rhoncus',\n      type: 'parameters',\n      layer: 'Raw',\n      tags: [\n        'raw',\n        'adipiscing_dolor',\n        'pellentesque_ipsum_dolor_fermentum_pellentesque'\n      ]\n    },\n    {\n      id: 'data/diam',\n      name: 'diam',\n      full_name: 'diam',\n      type: 'data',\n      layer: 'Feature',\n      tags: [\n        'feature',\n        'adipiscing_dolor',\n        'pellentesque_ipsum_dolor_fermentum_pellentesque'\n      ]\n    },\n    {\n      id: 'data/consectetur_libero_sit_diam_vestibulum_vitae',\n      name: 'consectetur libero sit diam vestibulum vitae',\n      full_name: 'consectetur libero sit diam vestibulum vitae',\n      type: 'data',\n      layer: 'Primary',\n      tags: ['primary', 'adipiscing_dolor']\n    },\n    {\n      id:\n        'data/amet_rhoncus_convallis_libero_fermentum_dignissim_amet_elit_rhoncus',\n      name:\n        'amet rhoncus convallis libero fermentum dignissim amet elit rhoncus',\n      full_name:\n        'amet rhoncus convallis libero fermentum dignissim amet elit rhoncus',\n      type: 'data',\n      layer: 'Feature',\n      tags: ['feature', 'pellentesque_ipsum_dolor_fermentum_pellentesque']\n    },\n    {\n      id: 'data/neque_diam_convallis_amet_consequat',\n      name: 'neque diam convallis amet consequat',\n      full_name: 'neque diam convallis amet consequat',\n      type: 'data',\n      layer: 'Raw',\n      tags: [\n        'raw',\n        'adipiscing_dolor',\n        'pellentesque_ipsum_dolor_fermentum_pellentesque'\n      ]\n    },\n    {\n      id: 'data/vestibulum_diam_nunc',\n      name: 'vestibulum diam nunc',\n      full_name: 'vestibulum diam nunc',\n      type: 'data',\n      layer: 'Intermediate',\n      tags: ['intermediate', 'pellentesque_ipsum_dolor_fermentum_pellentesque']\n    },\n    {\n      id: 'data/nulla_adipiscing_ac_elit_lorem_finibus',\n      name: 'nulla adipiscing ac elit lorem finibus',\n      full_name: 'nulla adipiscing ac elit lorem finibus',\n      type: 'data',\n      layer: 'Raw',\n      tags: ['raw', 'pellentesque_ipsum_dolor_fermentum_pellentesque']\n    },\n    {\n      id:\n        'data/parameters_viverra_rhoncus_rhoncus_condimentum_elit_fermentum_turpis_amet_quisque_sit',\n      name:\n        'parameters viverra rhoncus rhoncus condimentum elit fermentum turpis amet quisque sit',\n      full_name:\n        'parameters viverra rhoncus rhoncus condimentum elit fermentum turpis amet quisque sit',\n      type: 'parameters',\n      layer: 'Raw',\n      tags: [\n        'raw',\n        'adipiscing_dolor',\n        'pellentesque_ipsum_dolor_fermentum_pellentesque'\n      ]\n    },\n    {\n      id: 'data/amet',\n      name: 'amet',\n      full_name: 'amet',\n      type: 'data',\n      layer: 'Intermediate',\n      tags: [\n        'intermediate',\n        'adipiscing_dolor',\n        'pellentesque_ipsum_dolor_fermentum_pellentesque'\n      ]\n    },\n    {\n      id: 'data/sed_condimentum_diam_diam',\n      name: 'sed condimentum diam diam',\n      full_name: 'sed condimentum diam diam',\n      type: 'data',\n      layer: 'Model Input',\n      tags: ['model-input', 'adipiscing_dolor']\n    },\n    {\n      id:\n        'data/amet_pellentesque_dolor_consequat_elit_convallis_fermentum_vitae_diam',\n      name:\n        'amet pellentesque dolor consequat elit convallis fermentum vitae diam',\n      full_name:\n        'amet pellentesque dolor consequat elit convallis fermentum vitae diam',\n      type: 'data',\n      layer: null,\n      tags: ['raw', 'pellentesque_ipsum_dolor_fermentum_pellentesque']\n    },\n    {\n      id: 'data/quisque_fermentum_fermentum_diam_libero_nulla',\n      name: 'quisque fermentum fermentum diam libero nulla',\n      full_name: 'quisque fermentum fermentum diam libero nulla',\n      type: 'data',\n      layer: 'Primary',\n      tags: [\n        'primary',\n        'pellentesque_ipsum_dolor_fermentum_pellentesque',\n        'adipiscing_dolor'\n      ]\n    },\n    {\n      id: 'data/libero_sit_libero_dignissim_consequat_vestibulum_neque',\n      name: 'libero sit libero dignissim consequat vestibulum neque',\n      full_name: 'libero sit libero dignissim consequat vestibulum neque',\n      type: 'data',\n      layer: 'Feature',\n      tags: ['feature', 'adipiscing_dolor']\n    },\n    {\n      id: 'data/nunc_turpis',\n      name: 'nunc turpis',\n      full_name: 'nunc turpis',\n      type: 'data',\n      layer: 'Raw',\n      tags: ['raw', 'pellentesque_ipsum_dolor_fermentum_pellentesque']\n    },\n    {\n      id: 'data/amet_nunc_libero_nulla_sit',\n      name: 'amet nunc libero nulla sit',\n      full_name: 'amet nunc libero nulla sit',\n      type: 'data',\n      layer: 'Model Output',\n      tags: ['model-output', 'pellentesque_ipsum_dolor_fermentum_pellentesque']\n    },\n    {\n      id:\n        'data/pellentesque_elit_neque_sed_pellentesque_condimentum_condimentum',\n      name: 'pellentesque elit neque sed pellentesque condimentum condimentum',\n      full_name:\n        'pellentesque elit neque sed pellentesque condimentum condimentum',\n      type: 'data',\n      layer: 'Intermediate',\n      tags: ['intermediate', 'pellentesque_ipsum_dolor_fermentum_pellentesque']\n    },\n    {\n      id: 'data/consequat_rhoncus_ac_ipsum_lorem_neque_vestibulum',\n      name: 'consequat rhoncus ac ipsum lorem neque vestibulum',\n      full_name: 'consequat rhoncus ac ipsum lorem neque vestibulum',\n      type: 'data',\n      layer: null,\n      tags: ['intermediate', 'pellentesque_ipsum_dolor_fermentum_pellentesque']\n    },\n    {\n      id:\n        'data/vitae_libero_libero_lorem_elit_adipiscing_fermentum_fermentum_vestibulum_id',\n      name:\n        'vitae libero libero lorem elit adipiscing fermentum fermentum vestibulum id',\n      full_name:\n        'vitae libero libero lorem elit adipiscing fermentum fermentum vestibulum id',\n      type: 'data',\n      layer: 'Primary',\n      tags: ['primary', 'pellentesque_ipsum_dolor_fermentum_pellentesque']\n    },\n    {\n      id: 'data/convallis_convallis',\n      name: 'convallis convallis',\n      full_name: 'convallis convallis',\n      type: 'data',\n      layer: 'Primary',\n      tags: [\n        'primary',\n        'adipiscing_dolor',\n        'pellentesque_ipsum_dolor_fermentum_pellentesque'\n      ]\n    },\n    {\n      id: 'data/neque',\n      name: 'neque',\n      full_name: 'neque',\n      type: 'data',\n      layer: 'Intermediate',\n      tags: [\n        'intermediate',\n        'pellentesque_ipsum_dolor_fermentum_pellentesque',\n        'adipiscing_dolor'\n      ]\n    },\n    {\n      id: 'data/convallis',\n      name: 'convallis',\n      full_name: 'convallis',\n      type: 'data',\n      layer: 'Intermediate',\n      tags: [\n        'intermediate',\n        'pellentesque_ipsum_dolor_fermentum_pellentesque',\n        'adipiscing_dolor'\n      ]\n    }\n  ],\n  edges: [\n    { source: 'task/sed_viverra', target: 'data/parameters_libero' },\n    {\n      source: 'task/sed_viverra',\n      target: 'data/libero_sit_libero_dignissim_consequat_vestibulum_neque'\n    },\n    { source: 'task/sed_viverra', target: 'data/amet_nunc_libero_nulla_sit' },\n    { source: 'task/sed_viverra', target: 'data/convallis_convallis' },\n    {\n      source:\n        'data/amet_pellentesque_dolor_consequat_elit_convallis_fermentum_vitae_diam',\n      target: 'task/sed_viverra'\n    },\n    {\n      source: 'data/diam_nulla_finibus_dignissim_viverra_viverra',\n      target: 'task/sed_viverra'\n    },\n    { source: 'data/nunc_turpis', target: 'task/sed_viverra' },\n    { source: 'data/parameters_nulla_rhoncus', target: 'task/sed_viverra' },\n    {\n      source: 'data/consequat_rhoncus_ac_ipsum_lorem_neque_vestibulum',\n      target: 'task/neque_sit_ac_elit_neque'\n    },\n    { source: 'data/convallis', target: 'task/neque_sit_ac_elit_neque' },\n    {\n      source: 'data/amet_fermentum_fermentum_amet_sed',\n      target: 'task/neque_sit_ac_elit_neque'\n    },\n    {\n      source: 'data/parameters_nulla_rhoncus',\n      target: 'task/neque_sit_ac_elit_neque'\n    },\n    {\n      source: 'task/finibus_amet_rhoncus_consectetur_vitae_libero_nulla',\n      target: 'data/sed_condimentum_diam_diam'\n    },\n    {\n      source: 'task/finibus_amet_rhoncus_consectetur_vitae_libero_nulla',\n      target: 'data/consectetur_libero_sit_diam_vestibulum_vitae'\n    },\n    {\n      source: 'task/finibus_amet_rhoncus_consectetur_vitae_libero_nulla',\n      target: 'data/amet_nunc_libero_nulla_sit'\n    },\n    {\n      source: 'task/finibus_amet_rhoncus_consectetur_vitae_libero_nulla',\n      target: 'data/quisque_fermentum_fermentum_diam_libero_nulla'\n    },\n    {\n      source: 'data/parameters_nulla_rhoncus',\n      target: 'task/finibus_amet_rhoncus_consectetur_vitae_libero_nulla'\n    },\n    {\n      source: 'data/elit_adipiscing_fermentum_nunc_amet_consectetur_adipiscing',\n      target: 'task/finibus_amet_rhoncus_consectetur_vitae_libero_nulla'\n    },\n    {\n      source: 'data/nulla_adipiscing_ac_elit_lorem_finibus',\n      target: 'task/finibus_amet_rhoncus_consectetur_vitae_libero_nulla'\n    },\n    {\n      source: 'task/vestibulum_consectetur_id',\n      target: 'data/amet_nunc_libero_nulla_sit'\n    },\n    {\n      source: 'task/vestibulum_consectetur_id',\n      target: 'data/parameters_libero'\n    },\n    { source: 'data/neque', target: 'task/vestibulum_consectetur_id' },\n    {\n      source: 'data/nulla_adipiscing_ac_elit_lorem_finibus',\n      target: 'task/vestibulum_consectetur_id'\n    },\n    {\n      source: 'data/amet_fermentum_fermentum_amet_sed',\n      target: 'task/vestibulum_consectetur_id'\n    },\n    {\n      source: 'data/vestibulum_diam_nunc',\n      target: 'task/vestibulum_consectetur_id'\n    },\n    {\n      source: 'task/vitae',\n      target:\n        'data/amet_rhoncus_convallis_libero_fermentum_dignissim_amet_elit_rhoncus'\n    },\n    {\n      source: 'task/vitae',\n      target: 'data/consectetur_libero_sit_diam_vestibulum_vitae'\n    },\n    {\n      source: 'task/vitae',\n      target: 'data/libero_sit_libero_dignissim_consequat_vestibulum_neque'\n    },\n    {\n      source: 'task/vitae',\n      target:\n        'data/vitae_libero_libero_lorem_elit_adipiscing_fermentum_fermentum_vestibulum_id'\n    },\n    {\n      source: 'data/neque_diam_convallis_amet_consequat',\n      target: 'task/vitae'\n    },\n    {\n      source: 'data/nulla_adipiscing_ac_elit_lorem_finibus',\n      target: 'task/vitae'\n    },\n    {\n      source: 'data/parameters_convallis_amet_fermentum_sit_nulla_id_ac_diam',\n      target: 'task/vitae'\n    },\n    {\n      source: 'task/nulla_consequat_dignissim_elit_adipiscing_ac',\n      target: 'data/libero_sit_libero_dignissim_consequat_vestibulum_neque'\n    },\n    {\n      source: 'task/nulla_consequat_dignissim_elit_adipiscing_ac',\n      target:\n        'data/amet_rhoncus_convallis_libero_fermentum_dignissim_amet_elit_rhoncus'\n    },\n    {\n      source: 'task/nulla_consequat_dignissim_elit_adipiscing_ac',\n      target: 'data/neque_amet_turpis_rhoncus_dolor_nunc_sit'\n    },\n    {\n      source: 'task/nulla_consequat_dignissim_elit_adipiscing_ac',\n      target: 'data/amet_nunc_libero_nulla_sit'\n    },\n    {\n      source: 'data/neque_diam_convallis_amet_consequat',\n      target: 'task/nulla_consequat_dignissim_elit_adipiscing_ac'\n    },\n    {\n      source:\n        'data/parameters_viverra_rhoncus_rhoncus_condimentum_elit_fermentum_turpis_amet_quisque_sit',\n      target: 'task/nulla_consequat_dignissim_elit_adipiscing_ac'\n    },\n    {\n      source: 'data/vestibulum_diam_nunc',\n      target: 'task/nulla_consequat_dignissim_elit_adipiscing_ac'\n    },\n    {\n      source: 'data/diam_nulla_finibus_dignissim_viverra_viverra',\n      target: 'task/nulla_consequat_dignissim_elit_adipiscing_ac'\n    },\n    { source: 'task/consequat', target: 'data/diam' },\n    { source: 'task/consequat', target: 'data/convallis_convallis' },\n    {\n      source: 'task/consequat',\n      target: 'data/libero_sit_libero_dignissim_consequat_vestibulum_neque'\n    },\n    {\n      source: 'task/consequat',\n      target:\n        'data/amet_rhoncus_convallis_libero_fermentum_dignissim_amet_elit_rhoncus'\n    },\n    {\n      source: 'data/elit_adipiscing_fermentum_nunc_amet_consectetur_adipiscing',\n      target: 'task/consequat'\n    },\n    { source: 'data/convallis', target: 'task/consequat' },\n    { source: 'data/neque', target: 'task/consequat' },\n    {\n      source: 'data/amet_fermentum_fermentum_amet_sed',\n      target: 'task/consequat'\n    },\n    {\n      source:\n        'task/finibus_neque_sit_fermentum_adipiscing_dignissim_viverra_pellentesque_quisque_ipsum',\n      target: 'data/quisque_fermentum_fermentum_diam_libero_nulla'\n    },\n    {\n      source:\n        'task/finibus_neque_sit_fermentum_adipiscing_dignissim_viverra_pellentesque_quisque_ipsum',\n      target: 'data/sed_condimentum_diam_diam'\n    },\n    {\n      source:\n        'task/finibus_neque_sit_fermentum_adipiscing_dignissim_viverra_pellentesque_quisque_ipsum',\n      target: 'data/neque_amet_turpis_rhoncus_dolor_nunc_sit'\n    },\n    {\n      source:\n        'task/finibus_neque_sit_fermentum_adipiscing_dignissim_viverra_pellentesque_quisque_ipsum',\n      target: 'data/amet'\n    },\n    {\n      source: 'data/elit_adipiscing_fermentum_nunc_amet_consectetur_adipiscing',\n      target:\n        'task/finibus_neque_sit_fermentum_adipiscing_dignissim_viverra_pellentesque_quisque_ipsum'\n    },\n    {\n      source:\n        'data/amet_pellentesque_dolor_consequat_elit_convallis_fermentum_vitae_diam',\n      target:\n        'task/finibus_neque_sit_fermentum_adipiscing_dignissim_viverra_pellentesque_quisque_ipsum'\n    },\n    {\n      source:\n        'data/parameters_viverra_rhoncus_rhoncus_condimentum_elit_fermentum_turpis_amet_quisque_sit',\n      target:\n        'task/finibus_neque_sit_fermentum_adipiscing_dignissim_viverra_pellentesque_quisque_ipsum'\n    },\n    {\n      source: 'data/parameters_nulla_rhoncus',\n      target:\n        'task/finibus_neque_sit_fermentum_adipiscing_dignissim_viverra_pellentesque_quisque_ipsum'\n    },\n    {\n      source: 'task/pellentesque_amet_adipiscing_ac_libero_id_consectetur',\n      target: 'data/libero_sit_libero_dignissim_consequat_vestibulum_neque'\n    },\n    {\n      source: 'task/pellentesque_amet_adipiscing_ac_libero_id_consectetur',\n      target:\n        'data/amet_rhoncus_convallis_libero_fermentum_dignissim_amet_elit_rhoncus'\n    },\n    {\n      source: 'data/condimentum_viverra_rhoncus_sit_amet_neque_diam_consequat',\n      target: 'task/pellentesque_amet_adipiscing_ac_libero_id_consectetur'\n    },\n    {\n      source:\n        'data/pellentesque_elit_neque_sed_pellentesque_condimentum_condimentum',\n      target: 'task/pellentesque_amet_adipiscing_ac_libero_id_consectetur'\n    },\n    {\n      source: 'data/quisque_fermentum_fermentum_diam_libero_nulla',\n      target: 'task/pellentesque_amet_adipiscing_ac_libero_id_consectetur'\n    },\n    {\n      source: 'data/consequat_rhoncus_ac_ipsum_lorem_neque_vestibulum',\n      target: 'task/pellentesque_amet_adipiscing_ac_libero_id_consectetur'\n    },\n    {\n      source: 'task/sit_pellentesque_amet_lorem',\n      target:\n        'data/amet_rhoncus_convallis_libero_fermentum_dignissim_amet_elit_rhoncus'\n    },\n    {\n      source: 'task/sit_pellentesque_amet_lorem',\n      target:\n        'data/vitae_libero_libero_lorem_elit_adipiscing_fermentum_fermentum_vestibulum_id'\n    },\n    {\n      source: 'task/sit_pellentesque_amet_lorem',\n      target: 'data/convallis_convallis'\n    },\n    {\n      source: 'task/sit_pellentesque_amet_lorem',\n      target: 'data/neque_amet_turpis_rhoncus_dolor_nunc_sit'\n    },\n    {\n      source:\n        'data/parameters_viverra_rhoncus_rhoncus_condimentum_elit_fermentum_turpis_amet_quisque_sit',\n      target: 'task/sit_pellentesque_amet_lorem'\n    },\n    {\n      source: 'data/elit_adipiscing_fermentum_nunc_amet_consectetur_adipiscing',\n      target: 'task/sit_pellentesque_amet_lorem'\n    },\n    {\n      source:\n        'data/pellentesque_elit_neque_sed_pellentesque_condimentum_condimentum',\n      target: 'task/sit_pellentesque_amet_lorem'\n    }\n  ],\n  tags: [\n    {\n      name: 'pellentesque_ipsum_dolor_fermentum_pellentesque',\n      id: 'pellentesque_ipsum_dolor_fermentum_pellentesque'\n    },\n    { name: 'adipiscing_dolor', id: 'adipiscing_dolor' },\n    { name: 'Raw', id: 'raw' },\n    { name: 'Intermediate', id: 'intermediate' },\n    { name: 'Primary', id: 'primary' },\n    { name: 'Feature', id: 'feature' },\n    { name: 'Model Input', id: 'model-input' },\n    { name: 'Model Output', id: 'model-output' }\n  ]\n};\n","import { loadState } from './helpers';\nimport normalizeData from './normalize-data';\nimport loremIpsum from '../utils/data/lorem-ipsum.mock';\nimport animals from '../utils/data/animals.mock';\nimport demo from '../utils/data/demo.mock';\nimport layers from '../utils/data/layers.mock';\n\n/**\n * Determine where data should be loaded from (i.e. async from JSON,\n * or randomly-generated, or directly via props), then retrieve & format it.\n * @param {string|Array} data Either raw data itself, or a string\n * @return {Object} Normalized data\n */\nexport const getPipelineData = data => {\n  switch (data) {\n    case 'lorem':\n      // Use data from the 'lorem-ipsum' test dataset\n      return loremIpsum;\n    case 'animals':\n      // Use data from the 'animals' test dataset\n      return animals;\n    case 'demo':\n      // Use data from the 'demo' test dataset\n      return demo;\n    case 'layers':\n      // Use data from the 'layers' test dataset\n      return layers;\n    case 'json':\n      // Return empty state, as data will be loaded asynchronously later\n      return null;\n    case 'random':\n      throw new Error(\n        \"The random data should already have replaced the 'random' string in 'data-source.js', so if you see this error then something has gone horribly wrong.\"\n      );\n    case null:\n    case undefined:\n      throw new Error('No data was provided to App component via props');\n    default:\n      // Use data provided via component prop\n      return data;\n  }\n};\n\n/**\n * Generate a new default pipeline state instance\n * @return {Object} Initial state\n */\nexport const getInitialPipelineState = () => ({\n  id: null,\n  node: {\n    ids: [],\n    name: {},\n    fullName: {},\n    type: {},\n    isParam: {},\n    tags: {},\n    layer: {},\n    disabled: {},\n    clicked: null,\n    hovered: null\n  },\n  nodeType: {\n    ids: ['task', 'data', 'parameters'],\n    name: {\n      data: 'Datasets',\n      task: 'Nodes',\n      parameters: 'Parameters'\n    },\n    disabled: {}\n  },\n  edge: {\n    ids: [],\n    sources: {},\n    targets: {}\n  },\n  layer: {\n    ids: [],\n    name: {}\n  },\n  tag: {\n    ids: [],\n    name: {},\n    active: {},\n    enabled: {}\n  }\n});\n\n/**\n * Configure the redux store's initial state\n * @param {Object} props App component props\n * @return {Object} Initial state\n */\nconst getInitialState = (props = {}) => {\n  const pipelineData = normalizeData(getPipelineData(props.data));\n\n  // Load properties from localStorage if defined, else use defaults\n  const localStorageState = loadState();\n  const { textLabels = true, nodeTypeDisabled } = localStorageState;\n  const theme = props.theme || localStorageState.theme || 'dark';\n\n  const visible = Object.assign(\n    {\n      labelBtn: true,\n      layerBtn: true,\n      layers: Boolean(pipelineData.layer.ids.length),\n      exportBtn: true,\n      exportModal: false,\n      sidebar: true,\n      themeBtn: true\n    },\n    localStorageState.visible,\n    props.visible\n  );\n\n  if (nodeTypeDisabled) {\n    pipelineData.nodeType.disabled = nodeTypeDisabled;\n  }\n\n  return {\n    ...pipelineData,\n    chartSize: {},\n    fontLoaded: false,\n    textLabels,\n    visible,\n    theme\n  };\n};\n\nexport default getInitialState;\n","import { json } from 'd3-fetch';\nimport { dataPath } from '../config';\n\n/**\n * Asynchronously load, parse and format data from json file using D3\n */\nconst loadJsonData = () => {\n  const fullPath = `/public${dataPath.substr(1)}`;\n\n  return json(dataPath).catch(() => {\n    throw new Error(\n      `Unable to load pipeline data from ${dataPath}. If you're running Kedro-Viz as a standalone (e.g. for JavaScript development), please check that you have placed a data file at ${fullPath}.`\n    );\n  });\n};\n\nexport default loadJsonData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport configureStore from '../../store';\nimport { resetData, updateFontLoaded } from '../../actions';\nimport checkFontLoaded from '../../actions/check-font-loaded';\nimport Wrapper from '../wrapper';\nimport getInitialState from '../../store/initial-state';\nimport loadData from '../../store/load-data';\nimport normalizeData from '../../store/normalize-data';\nimport '@quantumblack/kedro-ui/lib/styles/app.css';\nimport './app.css';\n\n/**\n * Main wrapper component. Intialises the Redux store\n */\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const initialState = getInitialState(props);\n    this.store = configureStore(initialState);\n  }\n\n  componentDidMount() {\n    this.asyncLoadJsonData();\n    this.checkWebFontLoading();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data.schema_id !== this.props.data.schema_id) {\n      this.updatePipelineData();\n    }\n  }\n\n  /**\n   * Load data asynchronously from a JSON file then update the store\n   */\n  asyncLoadJsonData() {\n    if (this.props.data === 'json') {\n      loadData()\n        .then(normalizeData)\n        .then(data => {\n          this.store.dispatch(resetData(data));\n        });\n    }\n  }\n\n  /**\n   * Dispatch an action once the webfont has loaded\n   */\n  checkWebFontLoading() {\n    checkFontLoaded().then(() => {\n      this.store.dispatch(updateFontLoaded(true));\n    });\n  }\n\n  /**\n   * Dispatch an action to update the store with new pipeline data\n   */\n  updatePipelineData() {\n    const normalizedData = normalizeData(this.props.data);\n    this.store.dispatch(resetData(normalizedData));\n  }\n\n  render() {\n    return this.props.data ? (\n      <Provider store={this.store}>\n        <Wrapper />\n      </Provider>\n    ) : null;\n  }\n}\n\nApp.propTypes = {\n  data: PropTypes.oneOfType([\n    PropTypes.oneOf(['random', 'lorem', 'animals', 'demo', 'json', 'layers']),\n    PropTypes.shape({\n      schema_id: PropTypes.string,\n      edges: PropTypes.array.isRequired,\n      layers: PropTypes.array,\n      nodes: PropTypes.array.isRequired,\n      tags: PropTypes.array\n    })\n  ]),\n  theme: PropTypes.oneOf(['dark', 'light']),\n  visible: PropTypes.shape({\n    labelBtn: PropTypes.bool,\n    layerBtn: PropTypes.bool,\n    layers: PropTypes.bool,\n    exportBtn: PropTypes.bool,\n    sidebar: PropTypes.bool,\n    themeBtn: PropTypes.bool\n  })\n};\n\nApp.defaultProps = {\n  /**\n   * Determines what pipeline data will be displayed on the chart.\n   * You can supply one of the following strings:\n     - 'random': Use randomly-generated data\n     - 'lorem': Use data from the 'lorem-ipsum' test dataset\n     - 'animals': Use data from the 'animals' test dataset\n     - 'demo': Use data from the 'demo' test dataset\n     - 'json': Load data from a local json file (in /public/api/nodes.json)\n   * Alternatively, you can supply an object containing lists of edges, nodes, tags.\n   * See /src/utils/data for examples of the expected data format.\n   */\n  data: null,\n  /**\n   * Specify the theme: Either 'light' or 'dark'.\n   * If set, this will override the localStorage value.\n   */\n  theme: null,\n  /**\n   * Show/hide the icon buttons with { labelBtn:false } and/or { themeBtn:false }\n   */\n  visible: {}\n};\n\nexport default App;\n","import { createStore } from 'redux';\nimport reducer from '../reducers';\nimport { saveState } from './helpers';\n\n/**\n * Configure initial state and create the Redux store\n * @param {Object} initialState Initial Redux state (from initial-state.js)\n * @return {Object} Redux store\n */\nexport default function configureStore(initialState) {\n  const store = createStore(reducer, initialState);\n\n  store.subscribe(() => {\n    const { textLabels, theme, nodeType, visible } = store.getState();\n    saveState({\n      textLabels,\n      theme,\n      nodeTypeDisabled: nodeType.disabled,\n      visible\n    });\n  });\n\n  return store;\n}\n","import React from 'react';\nimport KonamiCode from 'konami-code';\nimport './easter-egg.css';\nimport mp3 from './brodyquest.mp3';\nimport img from './easter-egg.png';\n\n/**\n * Konami code Easter Egg component\n */\nclass EasterEgg extends React.Component {\n  /**\n   * Create new APP\n   * @param {object} props\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      play: false\n    };\n    if (typeof jest === 'undefined') {\n      console.info('Konami code is supported');\n    }\n\n    this.audio = new Audio(mp3);\n    this.audio.loop = true;\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  /**\n   * Called when mounted to view\n   */\n  componentDidMount() {\n    const konami = new KonamiCode();\n    konami.listen(this.toggleState.bind(this));\n    document.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  /**\n   * Triggered when component state updates\n   */\n  componentDidUpdate() {\n    this.toggleAudio();\n    this.toggleCSS();\n  }\n\n  /**\n   * Called just before component is removed from the view\n   */\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown);\n    document.body.classList.remove('easter-theme');\n  }\n\n  /**\n   * Handle keyboard interaction\n   * @param {Event} e\n   */\n  handleKeyDown(e) {\n    const escape = e.keyCode === 27;\n    if (escape && this.state.play) {\n      this.setState({\n        play: false\n      });\n    }\n  }\n\n  /**\n   * Toggle play state on/off\n   */\n  toggleState() {\n    this.setState({ play: !this.state.play });\n  }\n\n  /**\n   * Play/Pause the mp3\n   */\n  toggleAudio() {\n    if (this.state.play) {\n      this.audio.play();\n    } else {\n      this.audio.pause();\n    }\n  }\n\n  /**\n   * Play/Pause the mp3\n   */\n  toggleCSS() {\n    if (this.state.play) {\n      document.body.classList.add('easter-theme');\n    } else {\n      document.body.classList.remove('easter-theme');\n    }\n  }\n\n  /**\n   * Render the component\n   * @return {ReactElement}\n   */\n  render() {\n    const { play } = this.state;\n    if (!play) {\n      return null;\n    }\n    return (\n      <div className=\"easter-egg\">\n        <img src={img} alt=\"\" width=\"500\" height=\"480\" />\n      </div>\n    );\n  }\n}\n\nexport default EasterEgg;\n","import {\n  arrayToObject,\n  getNumberArray,\n  randomNumber,\n  randomNumberBetween,\n  getRandom,\n  getRandomName,\n  getRandomSelection,\n  unique\n} from './index';\n\n//--- Config variables ---//\n\nconst MIN_CONNECTED_NODES = 1;\nconst MAX_CONNECTED_NODES = 3;\nconst MAX_RANK_COUNT = 40;\nconst MIN_RANK_COUNT = 5;\nconst MAX_RANK_NODE_COUNT = 10;\nconst MIN_RANK_NODE_COUNT = 1;\nconst MAX_NODE_TAG_COUNT = 5;\nconst MAX_TAG_COUNT = 20;\nconst PARAMETERS_FREQUENCY = 0.05;\nconst LAYERS = [\n  'Raw',\n  'Intermediate',\n  'Primary',\n  'Feature',\n  'Model Input',\n  'Model Output'\n];\n\n/**\n * Generate a random pipeline dataset\n */\nclass Pipeline {\n  constructor() {\n    this.rankCount = this.getRankCount();\n    this.rankLayers = this.getRankLayers();\n    this.tags = this.generateTags();\n    this.nodes = this.generateNodes();\n    this.edges = this.generateEdges();\n  }\n\n  /**\n   * Get the number of ranks (i.e. horizontal bands)\n   * Odd ranks are data, even are task\n   * @returns {number} Rank count total\n   */\n  getRankCount() {\n    let rankCount = randomNumberBetween(MIN_RANK_COUNT, MAX_RANK_COUNT);\n    // Ensure odd numbers only, so that we start and end with a data node\n    if (!rankCount % 2) {\n      rankCount += 1;\n    }\n    return rankCount;\n  }\n\n  /**\n   * Randomly determine the layer for each rank\n   * @returns {object} Layers by rank\n   */\n  getRankLayers() {\n    const layerSize = arrayToObject(LAYERS, () => 0);\n    // Randomly decide the number of ranks in each layer\n    for (let i = 0; i < this.rankCount; i++) {\n      layerSize[getRandom(LAYERS)]++;\n    }\n    // Assign layers to ranks based on layerSize\n    const rankLayers = {};\n    for (let rank = 0, layer = 0; rank < this.rankCount; rank++) {\n      while (layerSize[LAYERS[layer]] < 1) {\n        layer++;\n      }\n      rankLayers[rank] = LAYERS[layer];\n      layerSize[LAYERS[layer]]--;\n    }\n    return rankLayers;\n  }\n\n  /**\n   * Generate a random list of tags\n   * @returns {array} Tag name strings\n   */\n  generateTags() {\n    const tagCount = randomNumber(MAX_TAG_COUNT);\n    return getNumberArray(tagCount)\n      .map(() => getRandomName(randomNumber(MAX_NODE_TAG_COUNT)))\n      .filter(unique);\n  }\n\n  /**\n   * Create list of nodes\n   * @returns {array} List of node objects\n   */\n  generateNodes() {\n    const nodes = [];\n    for (let rank = 0; rank < this.rankCount; rank++) {\n      const rankNodeCount = this.getRankNodeCount(rank);\n      const type = this.getType(rank);\n\n      for (let i = 0; i < rankNodeCount; i++) {\n        const node = this.createNode(i, rank, type);\n        nodes.push(node);\n      }\n    }\n    return nodes;\n  }\n\n  /**\n   * Randomly calculate the number of nodes in a rank\n   * @param {number} rank Rank number\n   * @returns {number} rank node count\n   */\n  getRankNodeCount(rank) {\n    const max = MAX_RANK_NODE_COUNT;\n    const min = MIN_RANK_NODE_COUNT;\n    const p = (this.rankCount - rank) / this.rankCount;\n    return randomNumber(p * (max - min) + min);\n  }\n\n  /**\n   * Determine a node's type based on its rank\n   * @param {number} rank Rank number\n   * @returns {string} Node type (task/data/parameters)\n   */\n  getType(rank) {\n    if (rank % 2) {\n      return 'task';\n    }\n    if (Math.random() < PARAMETERS_FREQUENCY) {\n      return 'parameters';\n    }\n    return 'data';\n  }\n\n  /**\n   * Create a node datum object\n   * @param {number} i Node index within its rank\n   * @param {number} rank Rank index\n   * @param {number} type\n   * @returns {object} Node object\n   */\n  createNode(i, rank, type) {\n    const name = this.getNodeName(type);\n    const node = {\n      id: `${type}/${name}(${rank}-${i})`,\n      name,\n      full_name: getRandomName(randomNumber(40)),\n      type,\n      rank,\n      layer: this.rankLayers[rank],\n      tags: this.getRandomTags()\n    };\n    return node;\n  }\n\n  /**\n   * Create a new node name of up to 10 words\n   * @param {string} Node type (task/data/parameters)\n   * @returns {string} Node name\n   */\n  getNodeName(type) {\n    const name = getRandomName(randomNumber(10), ' ');\n    return type === 'parameters' ? `Parameters ${name}` : name;\n  }\n\n  /**\n   * Select a random number of tags from the list of tags\n   * @returns {array} List of tags\n   */\n  getRandomTags() {\n    return getRandomSelection(this.tags, randomNumber(this.tags.length));\n  }\n\n  /**\n   * Create list of edges\n   * @returns {array} Edge objects\n   */\n  generateEdges() {\n    const edges = [];\n    const dataNodes = this.nodes.filter(node => node.type === 'data');\n    const taskNodes = this.nodes.filter(node => node.type !== 'data');\n    const remainingEdgeCount = arrayToObject(\n      dataNodes.map(node => node.id),\n      () => MAX_CONNECTED_NODES\n    );\n\n    taskNodes.forEach(node => {\n      const ancestors = dataNodes.filter(\n        d => d.rank < node.rank && remainingEdgeCount[d.id]\n      );\n      this.getRandomNodes(ancestors).forEach(source => {\n        edges.push({\n          source: source.id,\n          target: node.id\n        });\n        remainingEdgeCount[source.id]--;\n      });\n\n      const descendants = dataNodes.filter(\n        d => d.rank > node.rank && remainingEdgeCount[d.id]\n      );\n      this.getRandomNodes(descendants).forEach(target => {\n        edges.push({\n          source: node.id,\n          target: target.id\n        });\n        remainingEdgeCount[target.id]--;\n      });\n    });\n\n    return edges;\n  }\n\n  /**\n   * Get a random list of nodes to link to\n   * @param {array} nodes List of nodes from which to choose\n   * @returns {array} Randomly-selected nodes\n   */\n  getRandomNodes(nodes) {\n    const connections = randomNumberBetween(\n      MIN_CONNECTED_NODES,\n      MAX_CONNECTED_NODES\n    );\n    return getRandomSelection(nodes, connections);\n  }\n\n  /**\n   * Select only nodes that are connected to others\n   * @returns {object} Filtered nodes\n   */\n  filterUnconnectedNodes() {\n    const findMatchingEdge = node => edge =>\n      node.id === edge.source || node.id === edge.target;\n\n    return this.nodes.filter(\n      node => this.edges.findIndex(findMatchingEdge(node)) >= 0\n    );\n  }\n\n  /**\n   * Select only used tags\n   * @returns {object} Filtered tags\n   */\n  filterUnusedTags() {\n    return this.nodes\n      .reduce((tags, node) => (node.tags ? tags.concat(node.tags) : tags), [])\n      .filter(unique)\n      .map(tag => ({ name: tag, id: tag }));\n  }\n\n  /**\n   * Get a complete JSON schema\n   * @returns {object} Pipeline schema\n   */\n  getSchema() {\n    return {\n      edges: this.edges,\n      layers: LAYERS,\n      nodes: this.filterUnconnectedNodes(),\n      tags: this.filterUnusedTags()\n    };\n  }\n}\n\nconst generateRandomPipeline = () => new Pipeline().getSchema();\n\nexport default generateRandomPipeline;\n","import getRandomPipeline from './random-data';\n\n// Avoid errors when running in a non-browser environment\nconst hasWindow = typeof window !== 'undefined';\n\n/**\n * Validate against expected results\n * @param {string} source Input type key\n * @return {string} Data source type key\n */\nconst validateDataSource = source => {\n  const expectedInput = [\n    'lorem',\n    'animals',\n    'demo',\n    'layers',\n    'json',\n    'random'\n  ];\n  if (expectedInput.includes(source)) {\n    // If random, supply random data instead. We're doing this here to avoid\n    // including this file unnecessarily in the exported npm package\n    if (source === 'random') {\n      return getRandomPipeline();\n    }\n    return source;\n  }\n  if (source) {\n    throw new Error(\n      `Unexpected data source value '${source}'. Your input should be one of the following values: ${expectedInput.join(\n        ', '\n      )}.`\n    );\n  }\n  return 'json';\n};\n\n/**\n * Determine which data source to use\n * @return {string} Data source type key\n */\nconst getDataSource = () => {\n  let source;\n  const qs = hasWindow && window.location.search.match(/data=(\\w+)/);\n  const { REACT_APP_DATA_SOURCE } = process.env;\n  const isDemo =\n    hasWindow && window.location.host === 'quantumblacklabs.github.io';\n\n  if (qs) {\n    source = encodeURIComponent(qs[1]);\n  } else if (REACT_APP_DATA_SOURCE) {\n    source = REACT_APP_DATA_SOURCE;\n  } else if (isDemo) {\n    source = 'demo';\n  }\n  return validateDataSource(source);\n};\n\nexport default getDataSource;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'what-input';\nimport App from './components/app';\nimport EasterEgg from './components/easter-egg';\nimport getDataSource from './utils/data-source';\nimport './styles/index.css';\n\nReactDOM.render(\n  <>\n    <App data={getDataSource()} />\n    <EasterEgg />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}